{
  "address": "0x09D2213cc596192c97A289957c4863C9992683ed",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "marketInfo",
      "outputs": [
        {
          "name": "startTime",
          "type": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256"
        },
        {
          "name": "claimableTime",
          "type": "uint256"
        },
        {
          "name": "totalTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "name": "commitment",
          "type": "uint256"
        },
        {
          "name": "claimed",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "funder",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "totalTokens",
          "type": "uint256"
        },
        {
          "name": "startTime",
          "type": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256"
        },
        {
          "name": "claimableTime",
          "type": "uint256"
        },
        {
          "name": "minimumCommitmentAmount",
          "type": "uint256"
        },
        {
          "name": "maximumCommitmentAmount",
          "type": "uint256"
        },
        {
          "name": "wallet_",
          "type": "address"
        }
      ],
      "name": "initAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "auctionSuccessful",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "commitKLAY",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "tokensClaimable",
      "outputs": [
        {
          "name": "claimerCommitment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "emergencyCancelAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minimumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "setAuctionMinPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "startTime",
          "type": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "setAuctionTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "claimableTime",
          "type": "uint256"
        }
      ],
      "name": "setClaimableTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "auctionEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "resumeAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cancelAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "auctionToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "wallet_",
          "type": "address"
        }
      ],
      "name": "setAuctionWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "maximumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "setAuctionMaxPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "tokensVested",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pauseAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketStatus",
      "outputs": [
        {
          "name": "commitmentsTotal",
          "type": "uint256"
        },
        {
          "name": "minimumCommitmentAmount",
          "type": "uint256"
        },
        {
          "name": "maximumCommitmentAmount",
          "type": "uint256"
        },
        {
          "name": "finalized",
          "type": "bool"
        },
        {
          "name": "emergencyCanceled",
          "type": "bool"
        },
        {
          "name": "paused",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionTimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "minimumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "AuctionMinimumPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "maximumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "AuctionMaximumPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "AuctionWalletUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "commitment",
          "type": "uint256"
        }
      ],
      "name": "AddedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionEmergencyCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionResume",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "before_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "after_",
          "type": "uint256"
        }
      ],
      "name": "AuctionClaimableTimeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "transactionHash": "0x7bbc6c80fe784dd3a25a0dbdefc13b3988c997e2ba41673722927bcd92021a2a",
  "receipt": {
    "to": null,
    "from": "0xed0E18F99b684009fcF44c80E471717335aC49C9",
    "contractAddress": "0x09D2213cc596192c97A289957c4863C9992683ed",
    "transactionIndex": 191,
    "gasUsed": "3191570",
    "logsBloom": "0x
    "blockHash": "0xebdd4ce6b6ed6afc827edf661fe51fb87dbbcb87c90941e7fdedc66f5be48bef",
    "transactionHash": "0x7bbc6c80fe784dd3a25a0dbdefc13b3988c997e2ba41673722927bcd92021a2a",
    "logs": [
      {
        "transactionIndex": 191,
        "blockNumber": 77303525,
        "transactionHash": "0x7bbc6c80fe784dd3a25a0dbdefc13b3988c997e2ba41673722927bcd92021a2a",
        "address": "0x09D2213cc596192c97A289957c4863C9992683ed",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ed0e18f99b684009fcf44c80e471717335ac49c9"
        ],
        "data": "0x",
        "logIndex": 48,
        "blockHash": "0xebdd4ce6b6ed6afc827edf661fe51fb87dbbcb87c90941e7fdedc66f5be48bef"
      }
    ],
    "blockNumber": 77303525,
    "cumulativeGasUsed": "3191570",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "361661ccd7e0f10c6c6321a0fe32ce9d",
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"marketInfo\",\"outputs\":[{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"},{\"name\":\"claimableTime\",\"type\":\"uint256\"},{\"name\":\"totalTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"name\":\"commitment\",\"type\":\"uint256\"},{\"name\":\"claimed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"funder\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"},{\"name\":\"claimableTime\",\"type\":\"uint256\"},{\"name\":\"minimumCommitmentAmount\",\"type\":\"uint256\"},{\"name\":\"maximumCommitmentAmount\",\"type\":\"uint256\"},{\"name\":\"wallet_\",\"type\":\"address\"}],\"name\":\"initAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionSuccessful\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"commitKLAY\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"tokensClaimable\",\"outputs\":[{\"name\":\"claimerCommitment\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emergencyCancelAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"setAuctionMinPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"setAuctionTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"claimableTime\",\"type\":\"uint256\"}],\"name\":\"setClaimableTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"resumeAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet_\",\"type\":\"address\"}],\"name\":\"setAuctionWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"maximumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"setAuctionMaxPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"tokensVested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketStatus\",\"outputs\":[{\"name\":\"commitmentsTotal\",\"type\":\"uint256\"},{\"name\":\"minimumCommitmentAmount\",\"type\":\"uint256\"},{\"name\":\"maximumCommitmentAmount\",\"type\":\"uint256\"},{\"name\":\"finalized\",\"type\":\"bool\"},{\"name\":\"emergencyCanceled\",\"type\":\"bool\"},{\"name\":\"paused\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"minimumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"AuctionMinimumPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"maximumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"AuctionMaximumPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"AuctionWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"commitment\",\"type\":\"uint256\"}],\"name\":\"AddedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionEmergencyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionResume\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"before_\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"after_\",\"type\":\"uint256\"}],\"name\":\"AuctionClaimableTimeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"auctionEnded()\":{\"return\":\"bool True if current time is greater than auction end time.\"},\"auctionSuccessful()\":{\"return\":\"True if tokens sold greater than or equals to the minimum commitment amount.\"},\"cancelAuction()\":{\"details\":\"Admin can cancel the auction before it starts\"},\"commitKLAY(address)\":{\"params\":{\"beneficiary\":\"Auction participant KLAY address.\"}},\"emergencyCancelAuction()\":{\"details\":\"emergency only. admin function\"},\"finalize()\":{\"details\":\"Transfer contract funds to initialized wallet.\"},\"finalized()\":{\"return\":\"bool True if auction has been finalised.\"},\"initAuction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"details\":\"Init function.\",\"params\":{\"claimableTime\":\"Token claimable time if auction success.\",\"endTime\":\"Auction end time.\",\"funder\":\"The address that funds the token for BatchAuction.\",\"maximumCommitmentAmount\":\"Maximum amount collected at which the auction will be successful.\",\"minimumCommitmentAmount\":\"Minimum amount collected at which the auction will be successful.\",\"startTime\":\"Auction start time.\",\"token\":\"Address of the token being sold.\",\"totalTokens\":\"The total number of tokens to sell in auction.\",\"wallet_\":\"Address where collected funds will be forwarded to.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseAuction()\":{\"details\":\"Admin can pause auction during auction. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resumeAuction(uint256)\":{\"details\":\"Admin can resume auction and can extend end time \"},\"setAuctionMaxPrice(uint256)\":{\"params\":{\"maximumCommitmentAmount\":\"Auction maximum raised target.\"}},\"setAuctionMinPrice(uint256)\":{\"params\":{\"minimumCommitmentAmount\":\"Auction minimum raised target.\"}},\"setAuctionTime(uint256,uint256)\":{\"params\":{\"endTime\":\"Auction end time.\",\"startTime\":\"Auction start time.\"}},\"setAuctionWallet(address)\":{\"params\":{\"wallet_\":\"Auction wallet is where funds will be sent.\"}},\"setClaimableTime(uint256)\":{\"params\":{\"claimableTime\":\"timestamp in second\"}},\"tokenPrice()\":{\"return\":\"Token price.\"},\"tokensClaimable(address)\":{\"params\":{\"user_\":\"Auction participant address.\"},\"return\":\"claimerCommitment Tokens left to claim.\"},\"tokensVested(uint256)\":{\"params\":{\"totalAmount\":\"total token amount\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CLA Token Batch Auction Contract References: * - https://github.com/sushiswap/miso/blob/master/contracts/Auctions/BatchAuction.sol\"},\"userdoc\":{\"methods\":{\"auctionEnded()\":{\"notice\":\"Checks if the auction has ended.\"},\"auctionSuccessful()\":{\"notice\":\"Checks if raised more than minimum amount.\"},\"cancelAuction()\":{\"notice\":\"Cancel Auction before start\"},\"commitKLAY(address)\":{\"notice\":\"Commit KLAY to buy tokens on auction.\"},\"emergencyCancelAuction()\":{\"notice\":\"Cancel Auction during auction.\"},\"finalize()\":{\"notice\":\"-------------------------------------------------------- Finalize, Stop, Resume Auction --------------------------------------------------------Auction finishes successfully above the reserve\"},\"finalized()\":{\"notice\":\"Checks if the auction has been finalised.\"},\"initAuction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes main contract variables and transfers funds for the auction.\"},\"pauseAuction()\":{\"notice\":\"pause auction during auction.\"},\"resumeAuction(uint256)\":{\"notice\":\"resume auction during auction and can extend end time\"},\"setAuctionMaxPrice(uint256)\":{\"notice\":\"Admin can set start and min price through this function.\"},\"setAuctionMinPrice(uint256)\":{\"notice\":\"Admin can set start and min price through this function.\"},\"setAuctionTime(uint256,uint256)\":{\"notice\":\"Admin can set start and end time through this function.\"},\"setAuctionWallet(address)\":{\"notice\":\"Admin can set the auction wallet through this function.\"},\"setClaimableTime(uint256)\":{\"notice\":\"Admin can change cla claimable time through this function\"},\"tokenPrice()\":{\"notice\":\"Calculates the price of each token from all commitments.\"},\"tokensClaimable(address)\":{\"notice\":\"How many tokens the user is able to claim.\"},\"tokensVested(uint256)\":{\"notice\":\"How many tokens that user is able to claim if total amount is given\"},\"withdrawTokens()\":{\"notice\":\"Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\"},\"withdrawTokens(address)\":{\"notice\":\"Withdraw your tokens once the Auction has ended.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/auction/AuctionSwap.sol\":\"AuctionSwap\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves.\\n\\n        // A Solidity high level call has three parts:\\n        //  1. The target address is checked to verify it contains contract code\\n        //  2. The call itself is made, and success asserted\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\n        // solhint-disable-next-line max-line-length\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"pragma solidity ^0.5.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following \\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` into `address payable`. Note that this is\\n     * simply a type cast: the actual underlying value is not changed.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function toPayable(address account) internal pure returns (address payable) {\\n        return address(uint160(account));\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-call-value\\n        (bool success, ) = recipient.call.value(amount)(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n *\\n * _Since v2.5.0:_ this module is now much more gas efficient, given net gas\\n * metering changes introduced in the Istanbul hardfork.\\n */\\ncontract ReentrancyGuard {\\n    bool private _notEntered;\\n\\n    constructor () internal {\\n        // Storing an initial non-zero value makes deployment a bit more\\n        // expensive, but in exchange the refund on every call to nonReentrant\\n        // will be lower in amount. Since refunds are capped to a percetange of\\n        // the total transaction's gas, it is best to keep them low in cases\\n        // like this one, to increase the likelihood of the full refund coming\\n        // into effect.\\n        _notEntered = true;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_notEntered, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _notEntered = false;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _notEntered = true;\\n    }\\n}\\n\",\"keccak256\":\"0xb63221b23818d622bfd83d18e0968307e4fcb7a35536bdceded76e1cf8349acd\"},\"contracts/auction/AuctionSwap.sol\":{\"content\":\"pragma solidity 0.5.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"../libraries/BoringMath.sol\\\";\\nimport \\\"../codes/Ownable.sol\\\";\\n\\n/**\\n * @title CLA Token Batch Auction Contract\\n * References:\\n *\\n * - https://github.com/sushiswap/miso/blob/master/contracts/Auctions/BatchAuction.sol\\n */\\ncontract AuctionSwap is ReentrancyGuard, Ownable {\\n    using BoringMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice Main market variables.\\n    struct MarketInfo {\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 claimableTime;\\n        uint256 totalTokens;\\n    }\\n    MarketInfo public marketInfo;\\n\\n    /// @notice Market dynamic variables.\\n    struct MarketStatus {\\n        uint256 commitmentsTotal;\\n        uint256 minimumCommitmentAmount;\\n        uint256 maximumCommitmentAmount;\\n        bool finalized;\\n        bool emergencyCanceled; /// @dev true if auction canceled during auction is ongoing. \\n        bool paused; /// @dev flag that auction is paused \\n    }\\n    MarketStatus public marketStatus;\\n\\n    /// @notice Auction User variables.\\n    struct UserInfo {\\n        uint256 commitment; /// @dev user klay commitment\\n        uint256 claimed; /// @dev user auction token claimed amount\\n    }\\n    mapping(address => UserInfo) public userInfo; /// @dev address => UserInfo\\n\\n    /// @dev address of sales token\\n    address public auctionToken;\\n    /// @dev where the auction funds will get paid\\n    address payable public wallet;\\n    /// @dev The placeholder KLAY address.\\n    address private constant KLAY_ADDRESS =\\n        0x0000000000000000000000000000000000000000;\\n\\n    /// @notice boolean flag that auction swap information is initalized\\n    /// @dev this contract can be used once\\n    bool private isInitalized;\\n\\n    /// @dev token vesting perionds in seconds\\n    uint256 private constant TOKEN_VESTING_DURATION = 45 days;\\n\\n    /// @notice Event for updating auction times.  Needs to be before auction starts.\\n    event AuctionTimeUpdated(uint256 startTime, uint256 endTime);\\n    /// @notice Event for updating auction prices. Needs to be before auction starts.\\n    event AuctionMinimumPriceUpdated(uint256 minimumCommitmentAmount);\\n    /// @notice Event for updating auction prices. Needs to be before auction starts.\\n    event AuctionMaximumPriceUpdated(uint256 maximumCommitmentAmount);\\n    /// @notice Event for updating auction wallet. Needs to be before auction starts.\\n    event AuctionWalletUpdated(address wallet);\\n    /// @notice Event for adding a commitment.\\n    event AddedCommitment(address addr, uint256 commitment);\\n    /// @notice Event for finalization of the auction.\\n    event AuctionFinalized();\\n    /// @notice Event for cancellation of the auction.\\n    event AuctionCancelled();\\n    /// @notice Event for cancellation during the auction.\\n    event AuctionEmergencyCancelled();\\n    /// @notice Event for pause of the auction.\\n    event AuctionPaused();\\n    /// @notice Event for resume of the auction.\\n    event AuctionResume(uint256 endTime);\\n    /// @notice Event for update claimable time.\\n    event AuctionClaimableTimeChanged(uint256 before_, uint256 after_);\\n\\n    /**\\n     * @notice Initializes main contract variables and transfers funds for the auction.\\n     * @dev Init function.\\n     * @param funder The address that funds the token for BatchAuction.\\n     * @param token Address of the token being sold.\\n     * @param totalTokens The total number of tokens to sell in auction.\\n     * @param startTime Auction start time.\\n     * @param endTime Auction end time.\\n     * @param claimableTime Token claimable time if auction success.\\n     * @param minimumCommitmentAmount Minimum amount collected at which the auction will be successful.\\n     * @param maximumCommitmentAmount Maximum amount collected at which the auction will be successful.\\n     * @param wallet_ Address where collected funds will be forwarded to.\\n     */\\n    function initAuction(\\n        address funder,\\n        address token,\\n        uint256 totalTokens,\\n        uint256 startTime,\\n        uint256 endTime,\\n        uint256 claimableTime,\\n        uint256 minimumCommitmentAmount,\\n        uint256 maximumCommitmentAmount,\\n        address payable wallet_\\n    ) public onlyOwner {\\n        require(!isInitalized, \\\"AuctionSwap: alreay initialized\\\");\\n        require(\\n            claimableTime < 10000000000,\\n            \\\"AuctionSwap: enter an unix timestamp in seconds, not miliseconds\\\"\\n        );\\n        require(\\n            startTime >= block.timestamp,\\n            \\\"AuctionSwap: start time is before current time\\\"\\n        );\\n        require(\\n            endTime > startTime,\\n            \\\"AuctionSwap: end time must be older than start time\\\"\\n        );\\n        require(\\n            claimableTime > endTime, \\n            \\\"AuctionSwap: claimable time must be older than auction end time\\\"\\n        );\\n        require(\\n            totalTokens > 0,\\n            \\\"AuctionSwap: total tokens must be greater than zero\\\"\\n        );\\n        require(\\n            wallet_ != address(0),\\n            \\\"AuctionSwap: wallet is the zero address\\\"\\n        );\\n        require(\\n            minimumCommitmentAmount < maximumCommitmentAmount,\\n            \\\"AuctionSwap: min max commitment amount error\\\"\\n        );\\n        isInitalized = true;\\n\\n        marketStatus.minimumCommitmentAmount = minimumCommitmentAmount;\\n        marketStatus.maximumCommitmentAmount = maximumCommitmentAmount;\\n\\n        marketInfo.startTime = startTime;\\n        marketInfo.endTime = endTime;\\n        marketInfo.claimableTime = claimableTime;\\n        marketInfo.totalTokens = totalTokens;\\n\\n        auctionToken = token;\\n        wallet = wallet_;\\n\\n        IERC20(auctionToken).safeTransferFrom(funder, address(this), totalTokens);\\n    }\\n\\n    ///--------------------------------------------------------\\n    /// Commit to buying tokens!\\n    ///--------------------------------------------------------\\n\\n\\n    /**\\n     * @notice Commit KLAY to buy tokens on auction.\\n     * @param beneficiary Auction participant KLAY address.\\n     */\\n    function commitKLAY(\\n        address beneficiary\\n    ) public payable nonReentrant {\\n        require(msg.value > 0, \\\"AuctionSwap: Value must be higher than 0\\\");\\n        require(!marketStatus.finalized, \\\"AuctionSwap: Auction finalized\\\");\\n\\n        _addCommitment(beneficiary, msg.value);\\n\\n        /// @notice Revert if commitmentsTotal exceeds the balance\\n        require(\\n            marketStatus.commitmentsTotal <= address(this).balance,\\n            \\\"AuctionSwap: The committed KLAY exceeds the balance\\\"\\n        );\\n        require(\\n            marketStatus.maximumCommitmentAmount >=\\n                marketStatus.commitmentsTotal,\\n            \\\"AuctionSwap: The committed KLAY exceeds maximumCommitmentAmount\\\"\\n        );\\n    }\\n\\n    /// @notice Commits to an amount during an auction\\n    /**\\n     * @notice Updates commitment for this address and total commitment of the auction.\\n     * @param addr Auction participant address.\\n     * @param commitment The amount to commit.\\n     */\\n    function _addCommitment(address addr, uint256 commitment) internal {\\n        require(\\n            block.timestamp >= marketInfo.startTime &&\\n                block.timestamp <= marketInfo.endTime,\\n            \\\"AuctionSwap: Outside auction hours\\\"\\n        );\\n        require(!marketStatus.paused, \\\"AuctionSwap: Auction paused!\\\");\\n        UserInfo storage user = userInfo[addr];\\n\\n        user.commitment = user.commitment.add(commitment);\\n        marketStatus.commitmentsTotal = marketStatus.commitmentsTotal.add(commitment);\\n        emit AddedCommitment(addr, commitment);\\n    }\\n\\n    /**`\\n     * @notice Calculates amount of auction tokens for user to receive.\\n     * @param amount Amount of tokens to commit.\\n     * @return Auction token amount.\\n     */\\n    function _getTokenAmount(uint256 amount) internal view returns (uint256) {\\n        if (marketStatus.commitmentsTotal == 0) return 0;\\n        return amount.mul(1e18).div(tokenPrice());\\n    }\\n\\n    /**\\n     * @notice Calculates the price of each token from all commitments.\\n     * @return Token price.\\n     */\\n    function tokenPrice() public view returns (uint256) {\\n        return marketStatus.commitmentsTotal.mul(1e18).div(marketInfo.totalTokens);\\n    }\\n\\n    ///--------------------------------------------------------\\n    /// Finalize, Stop, Resume Auction\\n    ///--------------------------------------------------------\\n\\n    /// @notice Auction finishes successfully above the reserve\\n    /// @dev Transfer contract funds to initialized wallet.\\n    function finalize() public nonReentrant onlyOwner {\\n        require(\\n            !marketStatus.finalized,\\n            \\\"AuctionSwap: Auction has already finalized\\\"\\n        );\\n        require(isInitalized, \\\"AuctionSwap: Not initialized\\\");\\n        require(\\n            block.timestamp > marketInfo.endTime,\\n            \\\"AuctionSwap: Auction has not finished yet\\\"\\n        );\\n        marketStatus.finalized = true;\\n        if (auctionSuccessful()) {\\n            /// @dev Successful auction\\n            /// @dev Transfer KLAY to wallet.\\n            _safeTransferKLAY(\\n                wallet,\\n                marketStatus.commitmentsTotal\\n            );\\n        } else {\\n            /// @dev Failed auction\\n            /// @dev Return auction tokens back to wallet.\\n            IERC20(auctionToken).safeTransfer(wallet, marketInfo.totalTokens);\\n        }\\n        emit AuctionFinalized();\\n    }\\n\\n    /**\\n     * @notice Cancel Auction before start\\n     * @dev Admin can cancel the auction before it starts\\n     */\\n    function cancelAuction() public onlyOwner {\\n        require(!marketStatus.finalized, \\\"AuctionSwap: Already finalized\\\");\\n        require(isInitalized, \\\"AuctionSwap: Not initialized\\\");\\n        require(\\n            marketStatus.commitmentsTotal == 0,\\n            \\\"AuctionSwap: Funds already raised\\\"\\n        );\\n        marketStatus.finalized = true;\\n        IERC20(auctionToken).safeTransfer(wallet, marketInfo.totalTokens);\\n        emit AuctionCancelled();\\n    }\\n\\n    /**\\n     * @notice Cancel Auction during auction.\\n     * @dev emergency only. admin function\\n     */\\n    function emergencyCancelAuction() public onlyOwner {\\n        require(!marketStatus.finalized, \\\"AuctionSwap: Already finalized\\\");\\n        require(isInitalized, \\\"AuctionSwap: Not initialized\\\");\\n        marketStatus.finalized = true;\\n        marketStatus.emergencyCanceled = true;\\n        IERC20(auctionToken).safeTransfer(wallet, marketInfo.totalTokens);\\n        emit AuctionEmergencyCancelled();\\n    }\\n\\n    /**\\n     * @notice pause auction during auction.\\n     * @dev Admin can pause auction during auction. \\n     */\\n    function pauseAuction() public onlyOwner {\\n        require(!marketStatus.paused, \\\"AuctionSwap: Already paused\\\");\\n        require(!marketStatus.finalized, \\\"AuctionSwap: Already finalized\\\");\\n        require(block.timestamp > marketInfo.startTime && block.timestamp < marketInfo.endTime, \\\"AuctionSwap: Outside auction hours\\\");\\n        marketStatus.paused = true;\\n        emit AuctionPaused();\\n    }\\n\\n    /**\\n     * @notice resume auction during auction and can extend end time\\n     * @dev Admin can resume auction and can extend end time \\n     */\\n    function resumeAuction(uint256 endTime) public onlyOwner {\\n        require(marketStatus.paused, \\\"AuctionSwap: Alreay resumed\\\");\\n        require(!marketStatus.finalized, \\\"AuctionSwap: Already finalized\\\");\\n        require(block.timestamp > marketInfo.startTime && block.timestamp < marketInfo.endTime, \\\"AuctionSwap: Outside auction hours\\\");\\n        require(\\n            endTime < 10000000000,\\n            \\\"AuctionSwap: Enter an unix timestamp in seconds, not miliseconds\\\"\\n        );\\n        marketStatus.paused = false;\\n        if (marketInfo.endTime < endTime) { // endtime\\uacfc claimable time\\ub3c4 \\ube44\\uad50\\ud574\\uc57c\\ud558\\ub294\\uac00?\\n            marketInfo.endTime = endTime;\\n        }\\n        emit AuctionResume(marketInfo.endTime);\\n    }\\n\\n    /// @notice Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\\n    function withdrawTokens() public {\\n        withdrawTokens(msg.sender);\\n    }\\n\\n    /// @notice Withdraw your tokens once the Auction has ended.\\n    function withdrawTokens(address payable beneficiary) public nonReentrant {\\n        /// @dev auction success and auction not canceled\\n        UserInfo storage user = userInfo[beneficiary];\\n        if (auctionSuccessful() && !marketStatus.emergencyCanceled) {\\n            require(marketStatus.finalized, \\\"AuctionSwap: Not finalized\\\");\\n            require(block.timestamp > marketInfo.claimableTime, \\\"AuctionSwap: Not claimable\\\");\\n            /// @dev Successful auction! Transfer claimed tokens.\\n            uint256 tokensToClaim = tokensClaimable(beneficiary);\\n            require(tokensToClaim > 0, \\\"AuctionSwap: No tokens to claim\\\");\\n            user.claimed = user.claimed.add(tokensToClaim);\\n            IERC20(auctionToken).safeTransfer(beneficiary, tokensToClaim);\\n        } else {\\n            /// @dev Auction did not meet reserve price or emergency canceled\\n            /// @dev Return committed funds back to user.\\n            require(\\n                block.timestamp > marketInfo.endTime || marketStatus.emergencyCanceled,\\n                \\\"AuctionSwap: Auction has not finished yet\\\"\\n            );\\n            uint256 fundsCommitted = user.commitment;\\n            require(fundsCommitted > 0, \\\"AuctionSwap: No funds committed\\\");\\n            user.commitment = 0; // Stop multiple withdrawals and free some gas\\n            _safeTransferKLAY(beneficiary, fundsCommitted);\\n        }\\n    }\\n\\n    /**\\n     * @notice How many tokens that user is able to claim if total amount is given\\n     * @param totalAmount total token amount\\n     */\\n    function tokensVested(uint256 totalAmount) public view returns (uint256) {\\n        if (block.timestamp <= marketInfo.claimableTime) {\\n            return 0;\\n        } else if (block.timestamp >= marketInfo.claimableTime.add(TOKEN_VESTING_DURATION)) {\\n            return totalAmount;\\n        } else {\\n            return totalAmount.mul(block.timestamp.sub(marketInfo.claimableTime)) / TOKEN_VESTING_DURATION;\\n        }\\n    }\\n\\n    /**\\n     * @notice How many tokens the user is able to claim.\\n     * @param user_ Auction participant address.\\n     * @return  claimerCommitment Tokens left to claim.\\n     */\\n    function tokensClaimable(address user_)\\n        public\\n        view\\n        returns (uint256 claimerCommitment)\\n    {\\n        UserInfo storage user = userInfo[user_];\\n        if (user.commitment == 0) return 0;\\n        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));  \\n        claimerCommitment = _getTokenAmount(user.commitment); /// @dev total user token swaped amount\\n        claimerCommitment = tokensVested(claimerCommitment); /// @dev vested amount\\n        if (claimerCommitment > user.claimed) {\\n            claimerCommitment = claimerCommitment.sub(user.claimed);  ///@dev claimable amount\\n        } else {\\n            claimerCommitment = 0;\\n        }\\n\\n        if (claimerCommitment > unclaimedTokens) {\\n            claimerCommitment = unclaimedTokens;\\n        }\\n    }\\n\\n    /**\\n     * @notice Checks if raised more than minimum amount.\\n     * @return True if tokens sold greater than or equals to the minimum commitment amount.\\n     */\\n    function auctionSuccessful() public view returns (bool) {\\n        return\\n            marketStatus.commitmentsTotal >= marketStatus.minimumCommitmentAmount && marketStatus.commitmentsTotal > 0;\\n    }\\n\\n    /**\\n     * @notice Checks if the auction has ended.\\n     * @return bool True if current time is greater than auction end time.\\n     */\\n    function auctionEnded() public view returns (bool) {\\n        return block.timestamp > marketInfo.endTime;\\n    }\\n\\n    /**\\n     * @notice Checks if the auction has been finalised.\\n     * @return bool True if auction has been finalised.\\n     */\\n    function finalized() public view returns (bool) {\\n        return marketStatus.finalized;\\n    }\\n\\n    //--------------------------------------------------------\\n    // Setter Functions\\n    //--------------------------------------------------------\\n\\n    /**\\n     * @notice Admin can set start and end time through this function.\\n     * @param startTime Auction start time.\\n     * @param endTime Auction end time.\\n     */\\n    function setAuctionTime(uint256 startTime, uint256 endTime)\\n        external\\n        onlyOwner\\n    {\\n        require(\\n            startTime < 10000000000,\\n            \\\"AuctionSwap: enter an unix timestamp in seconds, not miliseconds\\\"\\n        );\\n        require(\\n            endTime < 10000000000,\\n            \\\"AuctionSwap: enter an unix timestamp in seconds, not miliseconds\\\"\\n        );\\n        require(\\n            startTime >= block.timestamp,\\n            \\\"AuctionSwap: start time is before current time\\\"\\n        );\\n        require(\\n            endTime > startTime,\\n            \\\"AuctionSwap: end time must be older than start price\\\"\\n        );\\n        require(\\n            marketInfo.claimableTime > endTime, \\n            \\\"AuctionSwap: claimable time must be older than auction end time\\\"\\n        );\\n        require(\\n            marketStatus.commitmentsTotal == 0,\\n            \\\"AuctionSwap: auction cannot have already started\\\"\\n        );\\n        \\n        marketInfo.startTime = startTime;\\n        marketInfo.endTime = endTime;\\n        emit AuctionTimeUpdated(marketInfo.startTime, marketInfo.endTime);\\n    }\\n\\n    /**\\n     * @notice Admin can change cla claimable time through this function\\n     * @param claimableTime timestamp in second\\n     */\\n    function setClaimableTime(uint256 claimableTime) external onlyOwner {\\n        require(\\n            claimableTime < 10000000000,\\n            \\\"AuctionSwap: enter an unix timestamp in seconds, not miliseconds\\\"\\n        );\\n        require(\\n            claimableTime > marketInfo.endTime, \\n            \\\"AuctionSwap: claimable time must be older than auction end time\\\"\\n        );\\n        require(\\n            claimableTime > block.timestamp, \\n            \\\"AuctionSwap: claimable time must be older than current time\\\"\\n        );\\n        require(\\n            marketInfo.claimableTime > block.timestamp,\\n            \\\"AuctionSwap: Already claim start\\\"\\n        );\\n        emit AuctionClaimableTimeChanged(marketInfo.claimableTime, claimableTime);\\n        marketInfo.claimableTime = claimableTime;\\n    }\\n\\n    /**\\n     * @notice Admin can set start and min price through this function.\\n     * @param minimumCommitmentAmount Auction minimum raised target.\\n     */\\n    function setAuctionMinPrice(uint256 minimumCommitmentAmount)\\n        external\\n        onlyOwner\\n    {\\n        require(\\n            marketStatus.commitmentsTotal == 0,\\n            \\\"AuctionSwap: auction cannot have already started\\\"\\n        );\\n        require(\\n            minimumCommitmentAmount < marketStatus.maximumCommitmentAmount, \\\"AuctionSwap: min max commitment amount error\\\"\\n        );\\n        marketStatus.minimumCommitmentAmount = minimumCommitmentAmount;\\n        emit AuctionMinimumPriceUpdated(marketStatus.minimumCommitmentAmount);\\n    }\\n\\n    /**\\n     * @notice Admin can set start and min price through this function.\\n     * @param maximumCommitmentAmount Auction maximum raised target.\\n     */\\n    function setAuctionMaxPrice(uint256 maximumCommitmentAmount)\\n        external\\n        onlyOwner\\n    {\\n        require(\\n            marketStatus.commitmentsTotal == 0,\\n            \\\"AuctionSwap: auction cannot have already started\\\"\\n        );\\n\\n        require(\\n            marketStatus.minimumCommitmentAmount < maximumCommitmentAmount, \\\"AuctionSwap: min max commitment amount error\\\"\\n        );\\n        marketStatus.maximumCommitmentAmount = maximumCommitmentAmount;\\n        emit AuctionMaximumPriceUpdated(marketStatus.maximumCommitmentAmount);\\n    }\\n\\n    /**\\n     * @notice Admin can set the auction wallet through this function.\\n     * @param wallet_ Auction wallet is where funds will be sent.\\n     */\\n    function setAuctionWallet(address payable wallet_) external onlyOwner {\\n        require(\\n            wallet_ != address(0),\\n            \\\"AuctionSwap: wallet is the zero address\\\"\\n        );\\n        wallet = wallet_;\\n\\n        emit AuctionWalletUpdated(wallet_);\\n    }\\n\\n    /**\\n     * @notice send KLAY through this internal function\\n     * @param to receiver payable address\\n     * @param value amount of klay\\n     */\\n    function _safeTransferKLAY(address payable to, uint value) internal {\\n        bool success = to.send(value);\\n        require(success, 'AuctionSwap: KLAY_TRANSFER_FAILED');\\n    }\\n}\\n\",\"keccak256\":\"0xfea060e538876ce24df72ad336556435ba8b5c7dd6097dc0b8f6bb3a870b29ea\"},\"contracts/codes/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.5.6;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n * \\n * Reference:\\n * \\n * - https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.1/contracts/access/Ownable.sol\\n */\\ncontract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = msg.sender;\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0xb066925af388797de1160b7ac2b460194b3575b7eec15ecd2643b398423f5b90\"},\"contracts/libraries/BoringMath.sol\":{\"content\":\"\\npragma solidity 0.5.6;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(-1), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x4c2c0716db38cefabee026e006b260e5e93c34b5cda041e86d9754789f142097\"}},\"version\":1}",
  "bytecode": "0x6080604081905260008054600160ff1990911617610100600160a81b03191661010033908102919091178255918291907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350612dfb806100646000396000f3fe6080604052600436106101b75760003560e01c80637ff9b596116100ec5780639a87222c1161008a578063b3f05b9711610064578063b3f05b971461047b578063b9ae736414610490578063e0e081d7146104a5578063f2fde38b146104cc576101b7565b80639a87222c1461041b5780639f6097571461043b578063aa76ee671461045b576101b7565b80638da5cb5b116100c65780638da5cb5b146103bc5780638edcfc15146103d15780638fa8b790146103f157806399fdb32014610406576101b7565b80637ff9b5961461037d57806386433374146103925780638d8f2adb146103a7576101b7565b80634dc80e151161015957806367ce69411161013357806367ce6941146103085780636ae260c114610328578063715018a6146103485780637da209921461035d576101b7565b80634dc80e15146102a45780634efe102b146102d1578063521eb273146102e6576101b7565b806336d0054b1161019557806336d0054b1461023a57806349df728c1461025c5780634a0e1d571461027c5780634bb278f31461028f576101b7565b8063031bee00146101bc5780631959a002146101ea5780633355018114610218575b600080fd5b3480156101c857600080fd5b506101d16104ec565b6040516101e19493929190612d1a565b60405180910390f35b3480156101f657600080fd5b5061020a610205366004611b8d565b6104fb565b6040516101e1929190612cb2565b34801561022457600080fd5b50610238610233366004611bab565b610514565b005b34801561024657600080fd5b5061024f61071d565b6040516101e19190612a06565b34801561026857600080fd5b50610238610277366004611b8d565b61073a565b61023861028a366004611b8d565b6108ce565b34801561029b57600080fd5b506102386109aa565b3480156102b057600080fd5b506102c46102bf366004611b8d565b610b18565b6040516101e19190612ca4565b3480156102dd57600080fd5b50610238610c38565b3480156102f257600080fd5b506102fb610d26565b6040516101e191906129a7565b34801561031457600080fd5b50610238610323366004611c8d565b610d35565b34801561033457600080fd5b50610238610343366004611cc9565b610dee565b34801561035457600080fd5b50610238610f42565b34801561036957600080fd5b50610238610378366004611c8d565b610fd0565b34801561038957600080fd5b506102c46110d3565b34801561039e57600080fd5b5061024f611104565b3480156103b357600080fd5b5061023861110c565b3480156103c857600080fd5b506102fb611117565b3480156103dd57600080fd5b506102386103ec366004611c8d565b61112b565b3480156103fd57600080fd5b50610238611253565b34801561041257600080fd5b506102fb611359565b34801561042757600080fd5b50610238610436366004611b8d565b611368565b34801561044757600080fd5b50610238610456366004611c8d565b61141b565b34801561046757600080fd5b506102c4610476366004611c8d565b6114c9565b34801561048757600080fd5b5061024f611539565b34801561049c57600080fd5b50610238611542565b3480156104b157600080fd5b506104ba611633565b6040516101e196959493929190612cc0565b3480156104d857600080fd5b506102386104e7366004611b8d565b611658565b60015460025460035460045484565b6009602052600090815260409020805460019091015482565b3361051d611117565b6001600160a01b03161461054f57604051600160e51b62461bcd02815260040161054690612b74565b60405180910390fd5b600b54600160a01b900460ff161561057c57604051600160e51b62461bcd02815260040161054690612aa4565b6402540be40084106105a357604051600160e51b62461bcd02815260040161054690612a84565b428610156105c657604051600160e51b62461bcd02815260040161054690612ac4565b8585116105e857604051600160e51b62461bcd02815260040161054690612b04565b84841161060a57604051600160e51b62461bcd02815260040161054690612c44565b6000871161062d57604051600160e51b62461bcd02815260040161054690612c04565b6001600160a01b03811661065657604051600160e51b62461bcd02815260040161054690612be4565b81831061067857604051600160e51b62461bcd02815260040161054690612a24565b600b8054600685905560078490556001889055600287905560038690556004899055600a80546001600160a01b03808d1673ffffffffffffffffffffffffffffffffffffffff1992831617928390558581167fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909416600160a01b17919091169290921790925561071291168a308a63ffffffff61172616565b505050505050505050565b60065460055460009111801590610735575060055415155b905090565b60005460ff1661075f57604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff191681556001600160a01b038216815260096020526040902061078661071d565b801561079a5750600854610100900460ff16155b156108555760085460ff166107c457604051600160e51b62461bcd02815260040161054690612a44565b60035442116107e857604051600160e51b62461bcd02815260040161054690612bc4565b60006107f383610b18565b90506000811161081857604051600160e51b62461bcd02815260040161054690612ae4565b600182015461082d908263ffffffff6117cd16565b6001830155600a5461084f906001600160a01b0316848363ffffffff6117f916565b506108bd565b60025442118061086c5750600854610100900460ff165b61088b57604051600160e51b62461bcd02815260040161054690612a94565b8054806108ad57604051600160e51b62461bcd02815260040161054690612b14565b600082556108bb8382611839565b505b50506000805460ff19166001179055565b60005460ff166108f357604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff191690553461091d57604051600160e51b62461bcd02815260040161054690612af4565b60085460ff161561094357604051600160e51b62461bcd02815260040161054690612ad4565b61094d8134611882565b6005543031101561097357604051600160e51b62461bcd02815260040161054690612a34565b600554600754101561099a57604051600160e51b62461bcd02815260040161054690612bf4565b506000805460ff19166001179055565b60005460ff166109cf57604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff19169055336109e2611117565b6001600160a01b031614610a0b57604051600160e51b62461bcd02815260040161054690612b74565b60085460ff1615610a3157604051600160e51b62461bcd02815260040161054690612bb4565b600b54600160a01b900460ff16610a5d57604051600160e51b62461bcd02815260040161054690612bd4565b6002544211610a8157604051600160e51b62461bcd02815260040161054690612a94565b6008805460ff19166001179055610a9661071d565b15610ab957600b54600554610ab4916001600160a01b031690611839565b610ae0565b600b54600454600a54610ae0926001600160a01b039182169291169063ffffffff6117f916565b6040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a16000805460ff19166001179055565b6001600160a01b03811660009081526009602052604081208054610b40576000915050610c33565b600a546040517f70a082310000000000000000000000000000000000000000000000000000000081526000916001600160a01b0316906370a0823190610b8a9030906004016129a7565b60206040518083038186803b158015610ba257600080fd5b505afa158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bda9190810190611cab565b9050610be98260000154611962565b9250610bf4836114c9565b92508160010154831115610c1f576001820154610c1890849063ffffffff61199716565b9250610c24565b600092505b80831115610c30578092505b50505b919050565b33610c41611117565b6001600160a01b031614610c6a57604051600160e51b62461bcd02815260040161054690612b74565b60085460ff1615610c9057604051600160e51b62461bcd02815260040161054690612b34565b600b54600160a01b900460ff16610cbc57604051600160e51b62461bcd02815260040161054690612bd4565b6008805461ff001960ff1990911660011716610100179055600b54600454600a54610cfb926001600160a01b039182169291169063ffffffff6117f916565b6040517f737df678223dc1257650e68de7c3edd69a997ef7f4483f56b31daf193147edef90600090a1565b600b546001600160a01b031681565b33610d3e611117565b6001600160a01b031614610d6757604051600160e51b62461bcd02815260040161054690612b74565b60055415610d8a57604051600160e51b62461bcd02815260040161054690612c84565b6007548110610dae57604051600160e51b62461bcd02815260040161054690612a24565b60068190556040517f61486335f79d88f87b5413c53a73db2c972424942b2cfa594c4482645c0cda5d90610de3908390612ca4565b60405180910390a150565b33610df7611117565b6001600160a01b031614610e2057604051600160e51b62461bcd02815260040161054690612b74565b6402540be4008210610e4757604051600160e51b62461bcd02815260040161054690612a84565b6402540be4008110610e6e57604051600160e51b62461bcd02815260040161054690612a84565b42821015610e9157604051600160e51b62461bcd02815260040161054690612ac4565b818111610eb357604051600160e51b62461bcd02815260040161054690612c34565b6003548110610ed757604051600160e51b62461bcd02815260040161054690612c44565b60055415610efa57604051600160e51b62461bcd02815260040161054690612c84565b600182905560028190556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb890610f369084908490612cb2565b60405180910390a15050565b33610f4b611117565b6001600160a01b031614610f7457604051600160e51b62461bcd02815260040161054690612b74565b600080546040516101009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805474ffffffffffffffffffffffffffffffffffffffff0019169055565b33610fd9611117565b6001600160a01b03161461100257604051600160e51b62461bcd02815260040161054690612b74565b6402540be400811061102957604051600160e51b62461bcd02815260040161054690612a84565b600254811161104d57604051600160e51b62461bcd02815260040161054690612c44565b42811161106f57604051600160e51b62461bcd02815260040161054690612a74565b600354421061109357604051600160e51b62461bcd02815260040161054690612a64565b6003546040517ff2467e1a515f3627fa3780a9f63daf3e30cd40bb20d7d1afec78e7390d25c986916110c6918490612cb2565b60405180910390a1600355565b600454600554600091610735916110f890670de0b6b3a764000063ffffffff6119bd16565b9063ffffffff6119f716565b600254421190565b6111153361073a565b565b60005461010090046001600160a01b031690565b33611134611117565b6001600160a01b03161461115d57604051600160e51b62461bcd02815260040161054690612b74565b60085462010000900460ff1661118857604051600160e51b62461bcd02815260040161054690612b84565b60085460ff16156111ae57604051600160e51b62461bcd02815260040161054690612b34565b600154421180156111c0575060025442105b6111df57604051600160e51b62461bcd02815260040161054690612c24565b6402540be400811061120657604051600160e51b62461bcd02815260040161054690612ba4565b6008805462ff0000191690556002548111156112225760028190555b6002546040517f3c0cdf4601a8b88cfb4f4979f138692c9e2730fa8cbb7ee34d89034af58db0a791610de391612ca4565b3361125c611117565b6001600160a01b03161461128557604051600160e51b62461bcd02815260040161054690612b74565b60085460ff16156112ab57604051600160e51b62461bcd02815260040161054690612b34565b600b54600160a01b900460ff166112d757604051600160e51b62461bcd02815260040161054690612bd4565b600554156112fa57604051600160e51b62461bcd02815260040161054690612b24565b6008805460ff19166001179055600b54600454600a5461132e926001600160a01b039182169291169063ffffffff6117f916565b6040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1565b600a546001600160a01b031681565b33611371611117565b6001600160a01b03161461139a57604051600160e51b62461bcd02815260040161054690612b74565b6001600160a01b0381166113c357604051600160e51b62461bcd02815260040161054690612be4565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090610de39083906129b5565b33611424611117565b6001600160a01b03161461144d57604051600160e51b62461bcd02815260040161054690612b74565b6005541561147057604051600160e51b62461bcd02815260040161054690612c84565b600654811161149457604051600160e51b62461bcd02815260040161054690612a24565b60078190556040517fb6db1e5f2bf00fafd8c12ac81692dad6bff47db4fda8872ebda5f3d5f3a851f090610de3908390612ca4565b60035460009042116114dd57506000610c33565b6003546114f390623b538063ffffffff6117cd16565b4210611500575080610c33565b600354623b53809061152a9061151d90429063ffffffff61199716565b849063ffffffff6119bd16565b8161153157fe5b049050610c33565b60085460ff1690565b3361154b611117565b6001600160a01b03161461157457604051600160e51b62461bcd02815260040161054690612b74565b60085462010000900460ff16156115a057604051600160e51b62461bcd02815260040161054690612b64565b60085460ff16156115c657604051600160e51b62461bcd02815260040161054690612b34565b600154421180156115d8575060025442105b6115f757604051600160e51b62461bcd02815260040161054690612c24565b6008805462ff00001916620100001790556040517f749d6d79623c8cbd2345906702c70ae75d4254a6c409047c16d52fa5a37ef69890600090a1565b60055460065460075460085460ff808216916101008104821691620100009091041686565b33611661611117565b6001600160a01b03161461168a57604051600160e51b62461bcd02815260040161054690612b74565b6001600160a01b0381166116b357604051600160e51b62461bcd02815260040161054690612a54565b600080546040516001600160a01b038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6040516117c79085907f23b872dd0000000000000000000000000000000000000000000000000000000090611763908790879087906024016129c3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a2c565b50505050565b818101818110156117f357604051600160e51b62461bcd02815260040161054690612b44565b92915050565b6040516118349084907fa9059cbb000000000000000000000000000000000000000000000000000000009061176390869086906024016129eb565b505050565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061183457604051600160e51b62461bcd02815260040161054690612b54565b600154421080159061189657506002544211155b6118b557604051600160e51b62461bcd02815260040161054690612c24565b60085462010000900460ff16156118e157604051600160e51b62461bcd02815260040161054690612b94565b6001600160a01b0382166000908152600960205260409020805461190b908363ffffffff6117cd16565b8155600554611920908363ffffffff6117cd16565b6005556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a9061195590859085906129eb565b60405180910390a1505050565b60055460009061197457506000610c33565b6117f361197f6110d3565b6110f884670de0b6b3a764000063ffffffff6119bd16565b808203828111156117f357604051600160e51b62461bcd02815260040161054690612a14565b60008115806119d8575050808202828282816119d557fe5b04145b6117f357604051600160e51b62461bcd02815260040161054690612c64565b6000808211611a1b57604051600160e51b62461bcd02815260040161054690612c94565b818381611a2457fe5b049392505050565b611a3e826001600160a01b0316611b1a565b611a5d57604051600160e51b62461bcd02815260040161054690612c74565b60006060836001600160a01b031683604051611a79919061299b565b6000604051808303816000865af19150503d8060008114611ab6576040519150601f19603f3d011682016040523d82523d6000602084013e611abb565b606091505b509150915081611ae057604051600160e51b62461bcd02815260040161054690612ab4565b8051156117c75780806020019051611afb9190810190611c6f565b6117c757604051600160e51b62461bcd02815260040161054690612c14565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611b4e57508115155b949350505050565b6000611b628235612d65565b9392505050565b6000611b628251612d70565b6000611b628235612d81565b6000611b628251612d81565b600060208284031215611b9f57600080fd5b6000611b4e8484611b56565b60008060008060008060008060006101208a8c031215611bca57600080fd5b6000611bd68c8c611b56565b9950506020611be78c828d01611b56565b9850506040611bf88c828d01611b75565b9750506060611c098c828d01611b75565b9650506080611c1a8c828d01611b75565b95505060a0611c2b8c828d01611b75565b94505060c0611c3c8c828d01611b75565b93505060e0611c4d8c828d01611b75565b925050610100611c5f8c828d01611b56565b9150509295985092959850929598565b600060208284031215611c8157600080fd5b6000611b4e8484611b69565b600060208284031215611c9f57600080fd5b6000611b4e8484611b75565b600060208284031215611cbd57600080fd5b6000611b4e8484611b81565b60008060408385031215611cdc57600080fd5b6000611ce88585611b75565b9250506020611cf985828601611b75565b9150509250929050565b611d0c81612d84565b82525050565b611d0c81612d65565b611d0c81612d70565b6000611d2f82612d58565b611d398185610c33565b9350611d49818560208601612d95565b9290920192915050565b6000611d60601583612d5c565b7f426f72696e674d6174683a20556e646572666c6f770000000000000000000000815260200192915050565b6000611d99602c83612d5c565b7f41756374696f6e537761703a206d696e206d617820636f6d6d69746d656e742081527f616d6f756e74206572726f720000000000000000000000000000000000000000602082015260400192915050565b6000611df8603383612d5c565b7f41756374696f6e537761703a2054686520636f6d6d6974746564204b4c41592081527f65786365656473207468652062616c616e636500000000000000000000000000602082015260400192915050565b6000611e57601a83612d5c565b7f41756374696f6e537761703a204e6f742066696e616c697a6564000000000000815260200192915050565b6000611e90602683612d5c565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611eef602083612d5c565b7f41756374696f6e537761703a20416c726561647920636c61696d207374617274815260200192915050565b6000611f28603b83612d5c565b7f41756374696f6e537761703a20636c61696d61626c652074696d65206d75737481527f206265206f6c646572207468616e2063757272656e742074696d650000000000602082015260400192915050565b6000611f87604083612d5c565b7f41756374696f6e537761703a20656e74657220616e20756e69782074696d657381527f74616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e6473602082015260400192915050565b6000611fe6602983612d5c565b7f41756374696f6e537761703a2041756374696f6e20686173206e6f742066696e81527f6973686564207965740000000000000000000000000000000000000000000000602082015260400192915050565b6000612045601f83612d5c565b7f41756374696f6e537761703a20616c7265617920696e697469616c697a656400815260200192915050565b600061207e602083612d5c565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006120b7602e83612d5c565b7f41756374696f6e537761703a2073746172742074696d65206973206265666f7281527f652063757272656e742074696d65000000000000000000000000000000000000602082015260400192915050565b6000612116601e83612d5c565b7f41756374696f6e537761703a2041756374696f6e2066696e616c697a65640000815260200192915050565b600061214f601f83612d5c565b7f41756374696f6e537761703a204e6f20746f6b656e7320746f20636c61696d00815260200192915050565b6000612188602883612d5c565b7f41756374696f6e537761703a2056616c7565206d75737420626520686967686581527f72207468616e2030000000000000000000000000000000000000000000000000602082015260400192915050565b60006121e7603383612d5c565b7f41756374696f6e537761703a20656e642074696d65206d757374206265206f6c81527f646572207468616e2073746172742074696d6500000000000000000000000000602082015260400192915050565b6000612246601f83612d5c565b7f41756374696f6e537761703a204e6f2066756e647320636f6d6d697474656400815260200192915050565b600061227f602183612d5c565b7f41756374696f6e537761703a2046756e647320616c726561647920726169736581527f6400000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006122de601e83612d5c565b7f41756374696f6e537761703a20416c72656164792066696e616c697a65640000815260200192915050565b6000612317601883612d5c565b7f426f72696e674d6174683a20416464204f766572666c6f770000000000000000815260200192915050565b6000612350602183612d5c565b7f41756374696f6e537761703a204b4c41595f5452414e534645525f4641494c4581527f4400000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006123af601b83612d5c565b7f41756374696f6e537761703a20416c7265616479207061757365640000000000815260200192915050565b60006123e8602083612d5c565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000612421601b83612d5c565b7f41756374696f6e537761703a20416c7265617920726573756d65640000000000815260200192915050565b600061245a601c83612d5c565b7f41756374696f6e537761703a2041756374696f6e207061757365642100000000815260200192915050565b6000612493604083612d5c565b7f41756374696f6e537761703a20456e74657220616e20756e69782074696d657381527f74616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e6473602082015260400192915050565b60006124f2602a83612d5c565b7f41756374696f6e537761703a2041756374696f6e2068617320616c726561647981527f2066696e616c697a656400000000000000000000000000000000000000000000602082015260400192915050565b6000612551601a83612d5c565b7f41756374696f6e537761703a204e6f7420636c61696d61626c65000000000000815260200192915050565b600061258a601c83612d5c565b7f41756374696f6e537761703a204e6f7420696e697469616c697a656400000000815260200192915050565b60006125c3602783612d5c565b7f41756374696f6e537761703a2077616c6c657420697320746865207a65726f2081527f6164647265737300000000000000000000000000000000000000000000000000602082015260400192915050565b6000612622603f83612d5c565b7f41756374696f6e537761703a2054686520636f6d6d6974746564204b4c41592081527f65786365656473206d6178696d756d436f6d6d69746d656e74416d6f756e7400602082015260400192915050565b6000612681603383612d5c565b7f41756374696f6e537761703a20746f74616c20746f6b656e73206d757374206281527f652067726561746572207468616e207a65726f00000000000000000000000000602082015260400192915050565b60006126e0602a83612d5c565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e81527f6f74207375636365656400000000000000000000000000000000000000000000602082015260400192915050565b600061273f602283612d5c565b7f41756374696f6e537761703a204f7574736964652061756374696f6e20686f7581527f7273000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b600061279e603483612d5c565b7f41756374696f6e537761703a20656e642074696d65206d757374206265206f6c81527f646572207468616e207374617274207072696365000000000000000000000000602082015260400192915050565b60006127fd603f83612d5c565b7f41756374696f6e537761703a20636c61696d61626c652074696d65206d75737481527f206265206f6c646572207468616e2061756374696f6e20656e642074696d6500602082015260400192915050565b600061285c601f83612d5c565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000612895601883612d5c565b7f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000815260200192915050565b60006128ce601f83612d5c565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b6000612907603083612d5c565b7f41756374696f6e537761703a2061756374696f6e2063616e6e6f74206861766581527f20616c7265616479207374617274656400000000000000000000000000000000602082015260400192915050565b6000612966601483612d5c565b7f426f72696e674d6174683a20446976207a65726f000000000000000000000000815260200192915050565b611d0c81612d81565b6000611b628284611d24565b602081016117f38284611d12565b602081016117f38284611d03565b606081016129d18286611d12565b6129de6020830185611d12565b611b4e6040830184612992565b604081016129f98285611d12565b611b626020830184612992565b602081016117f38284611d1b565b602080825281016117f381611d53565b602080825281016117f381611d8c565b602080825281016117f381611deb565b602080825281016117f381611e4a565b602080825281016117f381611e83565b602080825281016117f381611ee2565b602080825281016117f381611f1b565b602080825281016117f381611f7a565b602080825281016117f381611fd9565b602080825281016117f381612038565b602080825281016117f381612071565b602080825281016117f3816120aa565b602080825281016117f381612109565b602080825281016117f381612142565b602080825281016117f38161217b565b602080825281016117f3816121da565b602080825281016117f381612239565b602080825281016117f381612272565b602080825281016117f3816122d1565b602080825281016117f38161230a565b602080825281016117f381612343565b602080825281016117f3816123a2565b602080825281016117f3816123db565b602080825281016117f381612414565b602080825281016117f38161244d565b602080825281016117f381612486565b602080825281016117f3816124e5565b602080825281016117f381612544565b602080825281016117f38161257d565b602080825281016117f3816125b6565b602080825281016117f381612615565b602080825281016117f381612674565b602080825281016117f3816126d3565b602080825281016117f381612732565b602080825281016117f381612791565b602080825281016117f3816127f0565b602080825281016117f38161284f565b602080825281016117f381612888565b602080825281016117f3816128c1565b602080825281016117f3816128fa565b602080825281016117f381612959565b602081016117f38284612992565b604081016129f98285612992565b60c08101612cce8289612992565b612cdb6020830188612992565b612ce86040830187612992565b612cf56060830186611d1b565b612d026080830185611d1b565b612d0f60a0830184611d1b565b979650505050505050565b60808101612d288287612992565b612d356020830186612992565b612d426040830185612992565b612d4f6060830184612992565b95945050505050565b5190565b90815260200190565b60006117f382612d75565b151590565b6001600160a01b031690565b90565b60006117f38260006117f382612d65565b60005b83811015612db0578181015183820152602001612d98565b838111156117c7575050600091015256fea265627a7a72305820da80206fae871eed9663e69ade83173df6830ca3553b106212d1acebd7a3e7736c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80637ff9b596116100ec5780639a87222c1161008a578063b3f05b9711610064578063b3f05b971461047b578063b9ae736414610490578063e0e081d7146104a5578063f2fde38b146104cc576101b7565b80639a87222c1461041b5780639f6097571461043b578063aa76ee671461045b576101b7565b80638da5cb5b116100c65780638da5cb5b146103bc5780638edcfc15146103d15780638fa8b790146103f157806399fdb32014610406576101b7565b80637ff9b5961461037d57806386433374146103925780638d8f2adb146103a7576101b7565b80634dc80e151161015957806367ce69411161013357806367ce6941146103085780636ae260c114610328578063715018a6146103485780637da209921461035d576101b7565b80634dc80e15146102a45780634efe102b146102d1578063521eb273146102e6576101b7565b806336d0054b1161019557806336d0054b1461023a57806349df728c1461025c5780634a0e1d571461027c5780634bb278f31461028f576101b7565b8063031bee00146101bc5780631959a002146101ea5780633355018114610218575b600080fd5b3480156101c857600080fd5b506101d16104ec565b6040516101e19493929190612d1a565b60405180910390f35b3480156101f657600080fd5b5061020a610205366004611b8d565b6104fb565b6040516101e1929190612cb2565b34801561022457600080fd5b50610238610233366004611bab565b610514565b005b34801561024657600080fd5b5061024f61071d565b6040516101e19190612a06565b34801561026857600080fd5b50610238610277366004611b8d565b61073a565b61023861028a366004611b8d565b6108ce565b34801561029b57600080fd5b506102386109aa565b3480156102b057600080fd5b506102c46102bf366004611b8d565b610b18565b6040516101e19190612ca4565b3480156102dd57600080fd5b50610238610c38565b3480156102f257600080fd5b506102fb610d26565b6040516101e191906129a7565b34801561031457600080fd5b50610238610323366004611c8d565b610d35565b34801561033457600080fd5b50610238610343366004611cc9565b610dee565b34801561035457600080fd5b50610238610f42565b34801561036957600080fd5b50610238610378366004611c8d565b610fd0565b34801561038957600080fd5b506102c46110d3565b34801561039e57600080fd5b5061024f611104565b3480156103b357600080fd5b5061023861110c565b3480156103c857600080fd5b506102fb611117565b3480156103dd57600080fd5b506102386103ec366004611c8d565b61112b565b3480156103fd57600080fd5b50610238611253565b34801561041257600080fd5b506102fb611359565b34801561042757600080fd5b50610238610436366004611b8d565b611368565b34801561044757600080fd5b50610238610456366004611c8d565b61141b565b34801561046757600080fd5b506102c4610476366004611c8d565b6114c9565b34801561048757600080fd5b5061024f611539565b34801561049c57600080fd5b50610238611542565b3480156104b157600080fd5b506104ba611633565b6040516101e196959493929190612cc0565b3480156104d857600080fd5b506102386104e7366004611b8d565b611658565b60015460025460035460045484565b6009602052600090815260409020805460019091015482565b3361051d611117565b6001600160a01b03161461054f57604051600160e51b62461bcd02815260040161054690612b74565b60405180910390fd5b600b54600160a01b900460ff161561057c57604051600160e51b62461bcd02815260040161054690612aa4565b6402540be40084106105a357604051600160e51b62461bcd02815260040161054690612a84565b428610156105c657604051600160e51b62461bcd02815260040161054690612ac4565b8585116105e857604051600160e51b62461bcd02815260040161054690612b04565b84841161060a57604051600160e51b62461bcd02815260040161054690612c44565b6000871161062d57604051600160e51b62461bcd02815260040161054690612c04565b6001600160a01b03811661065657604051600160e51b62461bcd02815260040161054690612be4565b81831061067857604051600160e51b62461bcd02815260040161054690612a24565b600b8054600685905560078490556001889055600287905560038690556004899055600a80546001600160a01b03808d1673ffffffffffffffffffffffffffffffffffffffff1992831617928390558581167fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909416600160a01b17919091169290921790925561071291168a308a63ffffffff61172616565b505050505050505050565b60065460055460009111801590610735575060055415155b905090565b60005460ff1661075f57604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff191681556001600160a01b038216815260096020526040902061078661071d565b801561079a5750600854610100900460ff16155b156108555760085460ff166107c457604051600160e51b62461bcd02815260040161054690612a44565b60035442116107e857604051600160e51b62461bcd02815260040161054690612bc4565b60006107f383610b18565b90506000811161081857604051600160e51b62461bcd02815260040161054690612ae4565b600182015461082d908263ffffffff6117cd16565b6001830155600a5461084f906001600160a01b0316848363ffffffff6117f916565b506108bd565b60025442118061086c5750600854610100900460ff165b61088b57604051600160e51b62461bcd02815260040161054690612a94565b8054806108ad57604051600160e51b62461bcd02815260040161054690612b14565b600082556108bb8382611839565b505b50506000805460ff19166001179055565b60005460ff166108f357604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff191690553461091d57604051600160e51b62461bcd02815260040161054690612af4565b60085460ff161561094357604051600160e51b62461bcd02815260040161054690612ad4565b61094d8134611882565b6005543031101561097357604051600160e51b62461bcd02815260040161054690612a34565b600554600754101561099a57604051600160e51b62461bcd02815260040161054690612bf4565b506000805460ff19166001179055565b60005460ff166109cf57604051600160e51b62461bcd02815260040161054690612c54565b6000805460ff19169055336109e2611117565b6001600160a01b031614610a0b57604051600160e51b62461bcd02815260040161054690612b74565b60085460ff1615610a3157604051600160e51b62461bcd02815260040161054690612bb4565b600b54600160a01b900460ff16610a5d57604051600160e51b62461bcd02815260040161054690612bd4565b6002544211610a8157604051600160e51b62461bcd02815260040161054690612a94565b6008805460ff19166001179055610a9661071d565b15610ab957600b54600554610ab4916001600160a01b031690611839565b610ae0565b600b54600454600a54610ae0926001600160a01b039182169291169063ffffffff6117f916565b6040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a16000805460ff19166001179055565b6001600160a01b03811660009081526009602052604081208054610b40576000915050610c33565b600a546040517f70a082310000000000000000000000000000000000000000000000000000000081526000916001600160a01b0316906370a0823190610b8a9030906004016129a7565b60206040518083038186803b158015610ba257600080fd5b505afa158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bda9190810190611cab565b9050610be98260000154611962565b9250610bf4836114c9565b92508160010154831115610c1f576001820154610c1890849063ffffffff61199716565b9250610c24565b600092505b80831115610c30578092505b50505b919050565b33610c41611117565b6001600160a01b031614610c6a57604051600160e51b62461bcd02815260040161054690612b74565b60085460ff1615610c9057604051600160e51b62461bcd02815260040161054690612b34565b600b54600160a01b900460ff16610cbc57604051600160e51b62461bcd02815260040161054690612bd4565b6008805461ff001960ff1990911660011716610100179055600b54600454600a54610cfb926001600160a01b039182169291169063ffffffff6117f916565b6040517f737df678223dc1257650e68de7c3edd69a997ef7f4483f56b31daf193147edef90600090a1565b600b546001600160a01b031681565b33610d3e611117565b6001600160a01b031614610d6757604051600160e51b62461bcd02815260040161054690612b74565b60055415610d8a57604051600160e51b62461bcd02815260040161054690612c84565b6007548110610dae57604051600160e51b62461bcd02815260040161054690612a24565b60068190556040517f61486335f79d88f87b5413c53a73db2c972424942b2cfa594c4482645c0cda5d90610de3908390612ca4565b60405180910390a150565b33610df7611117565b6001600160a01b031614610e2057604051600160e51b62461bcd02815260040161054690612b74565b6402540be4008210610e4757604051600160e51b62461bcd02815260040161054690612a84565b6402540be4008110610e6e57604051600160e51b62461bcd02815260040161054690612a84565b42821015610e9157604051600160e51b62461bcd02815260040161054690612ac4565b818111610eb357604051600160e51b62461bcd02815260040161054690612c34565b6003548110610ed757604051600160e51b62461bcd02815260040161054690612c44565b60055415610efa57604051600160e51b62461bcd02815260040161054690612c84565b600182905560028190556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb890610f369084908490612cb2565b60405180910390a15050565b33610f4b611117565b6001600160a01b031614610f7457604051600160e51b62461bcd02815260040161054690612b74565b600080546040516101009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805474ffffffffffffffffffffffffffffffffffffffff0019169055565b33610fd9611117565b6001600160a01b03161461100257604051600160e51b62461bcd02815260040161054690612b74565b6402540be400811061102957604051600160e51b62461bcd02815260040161054690612a84565b600254811161104d57604051600160e51b62461bcd02815260040161054690612c44565b42811161106f57604051600160e51b62461bcd02815260040161054690612a74565b600354421061109357604051600160e51b62461bcd02815260040161054690612a64565b6003546040517ff2467e1a515f3627fa3780a9f63daf3e30cd40bb20d7d1afec78e7390d25c986916110c6918490612cb2565b60405180910390a1600355565b600454600554600091610735916110f890670de0b6b3a764000063ffffffff6119bd16565b9063ffffffff6119f716565b600254421190565b6111153361073a565b565b60005461010090046001600160a01b031690565b33611134611117565b6001600160a01b03161461115d57604051600160e51b62461bcd02815260040161054690612b74565b60085462010000900460ff1661118857604051600160e51b62461bcd02815260040161054690612b84565b60085460ff16156111ae57604051600160e51b62461bcd02815260040161054690612b34565b600154421180156111c0575060025442105b6111df57604051600160e51b62461bcd02815260040161054690612c24565b6402540be400811061120657604051600160e51b62461bcd02815260040161054690612ba4565b6008805462ff0000191690556002548111156112225760028190555b6002546040517f3c0cdf4601a8b88cfb4f4979f138692c9e2730fa8cbb7ee34d89034af58db0a791610de391612ca4565b3361125c611117565b6001600160a01b03161461128557604051600160e51b62461bcd02815260040161054690612b74565b60085460ff16156112ab57604051600160e51b62461bcd02815260040161054690612b34565b600b54600160a01b900460ff166112d757604051600160e51b62461bcd02815260040161054690612bd4565b600554156112fa57604051600160e51b62461bcd02815260040161054690612b24565b6008805460ff19166001179055600b54600454600a5461132e926001600160a01b039182169291169063ffffffff6117f916565b6040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1565b600a546001600160a01b031681565b33611371611117565b6001600160a01b03161461139a57604051600160e51b62461bcd02815260040161054690612b74565b6001600160a01b0381166113c357604051600160e51b62461bcd02815260040161054690612be4565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090610de39083906129b5565b33611424611117565b6001600160a01b03161461144d57604051600160e51b62461bcd02815260040161054690612b74565b6005541561147057604051600160e51b62461bcd02815260040161054690612c84565b600654811161149457604051600160e51b62461bcd02815260040161054690612a24565b60078190556040517fb6db1e5f2bf00fafd8c12ac81692dad6bff47db4fda8872ebda5f3d5f3a851f090610de3908390612ca4565b60035460009042116114dd57506000610c33565b6003546114f390623b538063ffffffff6117cd16565b4210611500575080610c33565b600354623b53809061152a9061151d90429063ffffffff61199716565b849063ffffffff6119bd16565b8161153157fe5b049050610c33565b60085460ff1690565b3361154b611117565b6001600160a01b03161461157457604051600160e51b62461bcd02815260040161054690612b74565b60085462010000900460ff16156115a057604051600160e51b62461bcd02815260040161054690612b64565b60085460ff16156115c657604051600160e51b62461bcd02815260040161054690612b34565b600154421180156115d8575060025442105b6115f757604051600160e51b62461bcd02815260040161054690612c24565b6008805462ff00001916620100001790556040517f749d6d79623c8cbd2345906702c70ae75d4254a6c409047c16d52fa5a37ef69890600090a1565b60055460065460075460085460ff808216916101008104821691620100009091041686565b33611661611117565b6001600160a01b03161461168a57604051600160e51b62461bcd02815260040161054690612b74565b6001600160a01b0381166116b357604051600160e51b62461bcd02815260040161054690612a54565b600080546040516001600160a01b038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6040516117c79085907f23b872dd0000000000000000000000000000000000000000000000000000000090611763908790879087906024016129c3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a2c565b50505050565b818101818110156117f357604051600160e51b62461bcd02815260040161054690612b44565b92915050565b6040516118349084907fa9059cbb000000000000000000000000000000000000000000000000000000009061176390869086906024016129eb565b505050565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061183457604051600160e51b62461bcd02815260040161054690612b54565b600154421080159061189657506002544211155b6118b557604051600160e51b62461bcd02815260040161054690612c24565b60085462010000900460ff16156118e157604051600160e51b62461bcd02815260040161054690612b94565b6001600160a01b0382166000908152600960205260409020805461190b908363ffffffff6117cd16565b8155600554611920908363ffffffff6117cd16565b6005556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a9061195590859085906129eb565b60405180910390a1505050565b60055460009061197457506000610c33565b6117f361197f6110d3565b6110f884670de0b6b3a764000063ffffffff6119bd16565b808203828111156117f357604051600160e51b62461bcd02815260040161054690612a14565b60008115806119d8575050808202828282816119d557fe5b04145b6117f357604051600160e51b62461bcd02815260040161054690612c64565b6000808211611a1b57604051600160e51b62461bcd02815260040161054690612c94565b818381611a2457fe5b049392505050565b611a3e826001600160a01b0316611b1a565b611a5d57604051600160e51b62461bcd02815260040161054690612c74565b60006060836001600160a01b031683604051611a79919061299b565b6000604051808303816000865af19150503d8060008114611ab6576040519150601f19603f3d011682016040523d82523d6000602084013e611abb565b606091505b509150915081611ae057604051600160e51b62461bcd02815260040161054690612ab4565b8051156117c75780806020019051611afb9190810190611c6f565b6117c757604051600160e51b62461bcd02815260040161054690612c14565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611b4e57508115155b949350505050565b6000611b628235612d65565b9392505050565b6000611b628251612d70565b6000611b628235612d81565b6000611b628251612d81565b600060208284031215611b9f57600080fd5b6000611b4e8484611b56565b60008060008060008060008060006101208a8c031215611bca57600080fd5b6000611bd68c8c611b56565b9950506020611be78c828d01611b56565b9850506040611bf88c828d01611b75565b9750506060611c098c828d01611b75565b9650506080611c1a8c828d01611b75565b95505060a0611c2b8c828d01611b75565b94505060c0611c3c8c828d01611b75565b93505060e0611c4d8c828d01611b75565b925050610100611c5f8c828d01611b56565b9150509295985092959850929598565b600060208284031215611c8157600080fd5b6000611b4e8484611b69565b600060208284031215611c9f57600080fd5b6000611b4e8484611b75565b600060208284031215611cbd57600080fd5b6000611b4e8484611b81565b60008060408385031215611cdc57600080fd5b6000611ce88585611b75565b9250506020611cf985828601611b75565b9150509250929050565b611d0c81612d84565b82525050565b611d0c81612d65565b611d0c81612d70565b6000611d2f82612d58565b611d398185610c33565b9350611d49818560208601612d95565b9290920192915050565b6000611d60601583612d5c565b7f426f72696e674d6174683a20556e646572666c6f770000000000000000000000815260200192915050565b6000611d99602c83612d5c565b7f41756374696f6e537761703a206d696e206d617820636f6d6d69746d656e742081527f616d6f756e74206572726f720000000000000000000000000000000000000000602082015260400192915050565b6000611df8603383612d5c565b7f41756374696f6e537761703a2054686520636f6d6d6974746564204b4c41592081527f65786365656473207468652062616c616e636500000000000000000000000000602082015260400192915050565b6000611e57601a83612d5c565b7f41756374696f6e537761703a204e6f742066696e616c697a6564000000000000815260200192915050565b6000611e90602683612d5c565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611eef602083612d5c565b7f41756374696f6e537761703a20416c726561647920636c61696d207374617274815260200192915050565b6000611f28603b83612d5c565b7f41756374696f6e537761703a20636c61696d61626c652074696d65206d75737481527f206265206f6c646572207468616e2063757272656e742074696d650000000000602082015260400192915050565b6000611f87604083612d5c565b7f41756374696f6e537761703a20656e74657220616e20756e69782074696d657381527f74616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e6473602082015260400192915050565b6000611fe6602983612d5c565b7f41756374696f6e537761703a2041756374696f6e20686173206e6f742066696e81527f6973686564207965740000000000000000000000000000000000000000000000602082015260400192915050565b6000612045601f83612d5c565b7f41756374696f6e537761703a20616c7265617920696e697469616c697a656400815260200192915050565b600061207e602083612d5c565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006120b7602e83612d5c565b7f41756374696f6e537761703a2073746172742074696d65206973206265666f7281527f652063757272656e742074696d65000000000000000000000000000000000000602082015260400192915050565b6000612116601e83612d5c565b7f41756374696f6e537761703a2041756374696f6e2066696e616c697a65640000815260200192915050565b600061214f601f83612d5c565b7f41756374696f6e537761703a204e6f20746f6b656e7320746f20636c61696d00815260200192915050565b6000612188602883612d5c565b7f41756374696f6e537761703a2056616c7565206d75737420626520686967686581527f72207468616e2030000000000000000000000000000000000000000000000000602082015260400192915050565b60006121e7603383612d5c565b7f41756374696f6e537761703a20656e642074696d65206d757374206265206f6c81527f646572207468616e2073746172742074696d6500000000000000000000000000602082015260400192915050565b6000612246601f83612d5c565b7f41756374696f6e537761703a204e6f2066756e647320636f6d6d697474656400815260200192915050565b600061227f602183612d5c565b7f41756374696f6e537761703a2046756e647320616c726561647920726169736581527f6400000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006122de601e83612d5c565b7f41756374696f6e537761703a20416c72656164792066696e616c697a65640000815260200192915050565b6000612317601883612d5c565b7f426f72696e674d6174683a20416464204f766572666c6f770000000000000000815260200192915050565b6000612350602183612d5c565b7f41756374696f6e537761703a204b4c41595f5452414e534645525f4641494c4581527f4400000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006123af601b83612d5c565b7f41756374696f6e537761703a20416c7265616479207061757365640000000000815260200192915050565b60006123e8602083612d5c565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000612421601b83612d5c565b7f41756374696f6e537761703a20416c7265617920726573756d65640000000000815260200192915050565b600061245a601c83612d5c565b7f41756374696f6e537761703a2041756374696f6e207061757365642100000000815260200192915050565b6000612493604083612d5c565b7f41756374696f6e537761703a20456e74657220616e20756e69782074696d657381527f74616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e6473602082015260400192915050565b60006124f2602a83612d5c565b7f41756374696f6e537761703a2041756374696f6e2068617320616c726561647981527f2066696e616c697a656400000000000000000000000000000000000000000000602082015260400192915050565b6000612551601a83612d5c565b7f41756374696f6e537761703a204e6f7420636c61696d61626c65000000000000815260200192915050565b600061258a601c83612d5c565b7f41756374696f6e537761703a204e6f7420696e697469616c697a656400000000815260200192915050565b60006125c3602783612d5c565b7f41756374696f6e537761703a2077616c6c657420697320746865207a65726f2081527f6164647265737300000000000000000000000000000000000000000000000000602082015260400192915050565b6000612622603f83612d5c565b7f41756374696f6e537761703a2054686520636f6d6d6974746564204b4c41592081527f65786365656473206d6178696d756d436f6d6d69746d656e74416d6f756e7400602082015260400192915050565b6000612681603383612d5c565b7f41756374696f6e537761703a20746f74616c20746f6b656e73206d757374206281527f652067726561746572207468616e207a65726f00000000000000000000000000602082015260400192915050565b60006126e0602a83612d5c565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e81527f6f74207375636365656400000000000000000000000000000000000000000000602082015260400192915050565b600061273f602283612d5c565b7f41756374696f6e537761703a204f7574736964652061756374696f6e20686f7581527f7273000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b600061279e603483612d5c565b7f41756374696f6e537761703a20656e642074696d65206d757374206265206f6c81527f646572207468616e207374617274207072696365000000000000000000000000602082015260400192915050565b60006127fd603f83612d5c565b7f41756374696f6e537761703a20636c61696d61626c652074696d65206d75737481527f206265206f6c646572207468616e2061756374696f6e20656e642074696d6500602082015260400192915050565b600061285c601f83612d5c565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000612895601883612d5c565b7f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000815260200192915050565b60006128ce601f83612d5c565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b6000612907603083612d5c565b7f41756374696f6e537761703a2061756374696f6e2063616e6e6f74206861766581527f20616c7265616479207374617274656400000000000000000000000000000000602082015260400192915050565b6000612966601483612d5c565b7f426f72696e674d6174683a20446976207a65726f000000000000000000000000815260200192915050565b611d0c81612d81565b6000611b628284611d24565b602081016117f38284611d12565b602081016117f38284611d03565b606081016129d18286611d12565b6129de6020830185611d12565b611b4e6040830184612992565b604081016129f98285611d12565b611b626020830184612992565b602081016117f38284611d1b565b602080825281016117f381611d53565b602080825281016117f381611d8c565b602080825281016117f381611deb565b602080825281016117f381611e4a565b602080825281016117f381611e83565b602080825281016117f381611ee2565b602080825281016117f381611f1b565b602080825281016117f381611f7a565b602080825281016117f381611fd9565b602080825281016117f381612038565b602080825281016117f381612071565b602080825281016117f3816120aa565b602080825281016117f381612109565b602080825281016117f381612142565b602080825281016117f38161217b565b602080825281016117f3816121da565b602080825281016117f381612239565b602080825281016117f381612272565b602080825281016117f3816122d1565b602080825281016117f38161230a565b602080825281016117f381612343565b602080825281016117f3816123a2565b602080825281016117f3816123db565b602080825281016117f381612414565b602080825281016117f38161244d565b602080825281016117f381612486565b602080825281016117f3816124e5565b602080825281016117f381612544565b602080825281016117f38161257d565b602080825281016117f3816125b6565b602080825281016117f381612615565b602080825281016117f381612674565b602080825281016117f3816126d3565b602080825281016117f381612732565b602080825281016117f381612791565b602080825281016117f3816127f0565b602080825281016117f38161284f565b602080825281016117f381612888565b602080825281016117f3816128c1565b602080825281016117f3816128fa565b602080825281016117f381612959565b602081016117f38284612992565b604081016129f98285612992565b60c08101612cce8289612992565b612cdb6020830188612992565b612ce86040830187612992565b612cf56060830186611d1b565b612d026080830185611d1b565b612d0f60a0830184611d1b565b979650505050505050565b60808101612d288287612992565b612d356020830186612992565b612d426040830185612992565b612d4f6060830184612992565b95945050505050565b5190565b90815260200190565b60006117f382612d75565b151590565b6001600160a01b031690565b90565b60006117f38260006117f382612d65565b60005b83811015612db0578181015183820152602001612d98565b838111156117c7575050600091015256fea265627a7a72305820da80206fae871eed9663e69ade83173df6830ca3553b106212d1acebd7a3e7736c6578706572696d656e74616cf50037",
  "devdoc": {
    "methods": {
      "auctionEnded()": {
        "return": "bool True if current time is greater than auction end time."
      },
      "auctionSuccessful()": {
        "return": "True if tokens sold greater than or equals to the minimum commitment amount."
      },
      "cancelAuction()": {
        "details": "Admin can cancel the auction before it starts"
      },
      "commitKLAY(address)": {
        "params": {
          "beneficiary": "Auction participant KLAY address."
        }
      },
      "emergencyCancelAuction()": {
        "details": "emergency only. admin function"
      },
      "finalize()": {
        "details": "Transfer contract funds to initialized wallet."
      },
      "finalized()": {
        "return": "bool True if auction has been finalised."
      },
      "initAuction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
        "details": "Init function.",
        "params": {
          "claimableTime": "Token claimable time if auction success.",
          "endTime": "Auction end time.",
          "funder": "The address that funds the token for BatchAuction.",
          "maximumCommitmentAmount": "Maximum amount collected at which the auction will be successful.",
          "minimumCommitmentAmount": "Minimum amount collected at which the auction will be successful.",
          "startTime": "Auction start time.",
          "token": "Address of the token being sold.",
          "totalTokens": "The total number of tokens to sell in auction.",
          "wallet_": "Address where collected funds will be forwarded to."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pauseAuction()": {
        "details": "Admin can pause auction during auction. "
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resumeAuction(uint256)": {
        "details": "Admin can resume auction and can extend end time "
      },
      "setAuctionMaxPrice(uint256)": {
        "params": {
          "maximumCommitmentAmount": "Auction maximum raised target."
        }
      },
      "setAuctionMinPrice(uint256)": {
        "params": {
          "minimumCommitmentAmount": "Auction minimum raised target."
        }
      },
      "setAuctionTime(uint256,uint256)": {
        "params": {
          "endTime": "Auction end time.",
          "startTime": "Auction start time."
        }
      },
      "setAuctionWallet(address)": {
        "params": {
          "wallet_": "Auction wallet is where funds will be sent."
        }
      },
      "setClaimableTime(uint256)": {
        "params": {
          "claimableTime": "timestamp in second"
        }
      },
      "tokenPrice()": {
        "return": "Token price."
      },
      "tokensClaimable(address)": {
        "params": {
          "user_": "Auction participant address."
        },
        "return": "claimerCommitment Tokens left to claim."
      },
      "tokensVested(uint256)": {
        "params": {
          "totalAmount": "total token amount"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "CLA Token Batch Auction Contract References: * - https://github.com/sushiswap/miso/blob/master/contracts/Auctions/BatchAuction.sol"
  },
  "userdoc": {
    "methods": {
      "auctionEnded()": {
        "notice": "Checks if the auction has ended."
      },
      "auctionSuccessful()": {
        "notice": "Checks if raised more than minimum amount."
      },
      "cancelAuction()": {
        "notice": "Cancel Auction before start"
      },
      "commitKLAY(address)": {
        "notice": "Commit KLAY to buy tokens on auction."
      },
      "emergencyCancelAuction()": {
        "notice": "Cancel Auction during auction."
      },
      "finalize()": {
        "notice": "-------------------------------------------------------- Finalize, Stop, Resume Auction --------------------------------------------------------Auction finishes successfully above the reserve"
      },
      "finalized()": {
        "notice": "Checks if the auction has been finalised."
      },
      "initAuction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
        "notice": "Initializes main contract variables and transfers funds for the auction."
      },
      "pauseAuction()": {
        "notice": "pause auction during auction."
      },
      "resumeAuction(uint256)": {
        "notice": "resume auction during auction and can extend end time"
      },
      "setAuctionMaxPrice(uint256)": {
        "notice": "Admin can set start and min price through this function."
      },
      "setAuctionMinPrice(uint256)": {
        "notice": "Admin can set start and min price through this function."
      },
      "setAuctionTime(uint256,uint256)": {
        "notice": "Admin can set start and end time through this function."
      },
      "setAuctionWallet(address)": {
        "notice": "Admin can set the auction wallet through this function."
      },
      "setClaimableTime(uint256)": {
        "notice": "Admin can change cla claimable time through this function"
      },
      "tokenPrice()": {
        "notice": "Calculates the price of each token from all commitments."
      },
      "tokensClaimable(address)": {
        "notice": "How many tokens the user is able to claim."
      },
      "tokensVested(uint256)": {
        "notice": "How many tokens that user is able to claim if total amount is given"
      },
      "withdrawTokens()": {
        "notice": "Withdraws bought tokens, or returns commitment if the sale is unsuccessful."
      },
      "withdrawTokens(address)": {
        "notice": "Withdraw your tokens once the Auction has ended."
      }
    }
  }
}