{
  "address": "0x58841eA2170787741d1eADdB0aaeE6C81d27FB6A",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolRewarderInfo",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "claAmount",
          "type": "uint256"
        },
        {
          "name": "newLpAmount",
          "type": "uint256"
        }
      ],
      "name": "onClaReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        },
        {
          "name": "rewarder",
          "type": "address"
        }
      ],
      "name": "removePoolRewarder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masterChef",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "poolRewarderLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        },
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "claRewardAmount",
          "type": "uint256"
        }
      ],
      "name": "pendingTokens",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        },
        {
          "name": "newRewarder",
          "type": "address"
        }
      ],
      "name": "addPoolRewarder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "getRewarderInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "rewardToken",
              "type": "address"
            },
            {
              "name": "tokenPerBlock",
              "type": "uint256"
            },
            {
              "name": "allocPoint",
              "type": "uint256"
            },
            {
              "name": "totalAllocPoint",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "masterChef_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newRewarder",
          "type": "address"
        }
      ],
      "name": "LogAddPoolRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rewarder",
          "type": "address"
        }
      ],
      "name": "LogRemovePoolRewarder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "transactionHash": "0x7befbcdb870fd445cbd0bf22f26af8a53f38dbc62525c67d77523325f30d2983",
  "receipt": {
    "to": null,
    "from": "0xed0E18F99b684009fcF44c80E471717335aC49C9",
    "contractAddress": "0x58841eA2170787741d1eADdB0aaeE6C81d27FB6A",
    "transactionIndex": 9,
    "gasUsed": "1635772",
    "logsBloom": "0x
    "blockHash": "0xf3ef707cf641daee9b4aef321632c6ec1c098135f58db677a6e8478eb405cd82",
    "transactionHash": "0x7befbcdb870fd445cbd0bf22f26af8a53f38dbc62525c67d77523325f30d2983",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 80656701,
        "transactionHash": "0x7befbcdb870fd445cbd0bf22f26af8a53f38dbc62525c67d77523325f30d2983",
        "address": "0x58841eA2170787741d1eADdB0aaeE6C81d27FB6A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ed0e18f99b684009fcf44c80e471717335ac49c9"
        ],
        "data": "0x",
        "logIndex": 24,
        "blockHash": "0xf3ef707cf641daee9b4aef321632c6ec1c098135f58db677a6e8478eb405cd82"
      }
    ],
    "blockNumber": 80656701,
    "cumulativeGasUsed": "1635772",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x02703E13b5D3d3056AC9321983B44A2cc065bB22"
  ],
  "solcInputHash": "16ebff2b74feaacc6c8b2d1d07990d83",
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolRewarderInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"claAmount\",\"type\":\"uint256\"},{\"name\":\"newLpAmount\",\"type\":\"uint256\"}],\"name\":\"onClaReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"rewarder\",\"type\":\"address\"}],\"name\":\"removePoolRewarder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterChef\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"poolRewarderLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"claRewardAmount\",\"type\":\"uint256\"}],\"name\":\"pendingTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"newRewarder\",\"type\":\"address\"}],\"name\":\"addPoolRewarder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getRewarderInfo\",\"outputs\":[{\"components\":[{\"name\":\"rewardToken\",\"type\":\"address\"},{\"name\":\"tokenPerBlock\",\"type\":\"uint256\"},{\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"name\":\"totalAllocPoint\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"masterChef_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newRewarder\",\"type\":\"address\"}],\"name\":\"LogAddPoolRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rewarder\",\"type\":\"address\"}],\"name\":\"LogRemovePoolRewarder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getRewarderInfo(uint256)\":{\"params\":{\"pid\":\"Pool id.\"}},\"onClaReward(uint256,address,address,uint256,uint256)\":{\"params\":{\"claAmount\":\"Amount of cla reward.\",\"newLpAmount\":\"Amount of user lp amount.\",\"pid\":\"Pool id.\",\"recipient\":\"Address to recieve reward.\",\"user\":\"Address of user.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingTokens(uint256,address,uint256)\":{\"params\":{\"claRewardAmount\":\"Amount of cla reward.\",\"pid\":\"Pool id.\",\"user\":\"Address of user.\"}},\"poolRewarderLength(uint256)\":{\"params\":{\"pid\":\"Pool id.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"getRewarderInfo(uint256)\":{\"notice\":\"Function to see pool's all rewarder info.\"},\"onClaReward(uint256,address,address,uint256,uint256)\":{\"notice\":\"Function to claim all user's reward from pool rewarder. Only MasterChef can call this function.\"},\"pendingTokens(uint256,address,uint256)\":{\"notice\":\"Function to see user's pending amounts for pools reward.\"},\"poolRewarderLength(uint256)\":{\"notice\":\"Returns the number of rewarder in pool.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/CLA/TotalRewarder.sol\":\"TotalRewarder\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"contracts/CLA/TotalRewarder.sol\":{\"content\":\"pragma solidity 0.5.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../interfaces/IRewarderV2.sol\\\";\\nimport \\\"../codes/Ownable.sol\\\";\\n\\ncontract TotalRewarder is Ownable {\\n\\n  struct RewarderInfo {\\n    address rewardToken;\\n    uint256 tokenPerBlock;\\n    uint256 allocPoint;\\n    uint256 totalAllocPoint;\\n  }\\n\\n  mapping(uint256 => IRewarderV2[]) public poolRewarderInfo;\\n\\n  address public masterChef;\\n\\n  constructor (address masterChef_) public {\\n    masterChef = masterChef_;\\n  }\\n\\n  // EVENT\\n\\n  event LogAddPoolRewarder(uint256 pid, address newRewarder);\\n  event LogRemovePoolRewarder(uint256 pid, address rewarder);\\n\\n  // MODIFIER\\n\\n  modifier onlyMC() {\\n    require(msg.sender == masterChef, \\\"TotalRewarder:: Not from master chef\\\");\\n    _;\\n  }\\n\\n  // VIEW FUNCTION \\n\\n  /// @notice Returns the number of rewarder in pool.\\n  /// @param pid Pool id.\\n  function poolRewarderLength(uint256 pid) public view returns (uint256) {\\n    return poolRewarderInfo[pid].length;\\n  }\\n\\n  /// @notice Function to see user's pending amounts for pools reward.\\n  /// @param pid Pool id.\\n  /// @param user Address of user.\\n  /// @param claRewardAmount Amount of cla reward.\\n  function pendingTokens(\\n    uint256 pid,\\n    address user,\\n    uint256 claRewardAmount\\n  ) external view returns (IERC20[] memory, uint256[] memory) {\\n    uint256 length = poolRewarderInfo[pid].length;\\n    IERC20[] memory rewardTokens = new IERC20[](length);\\n    uint256[] memory rewardAmounts = new uint256[](length);\\n    for(uint8 i = 0; i < length; i++) {\\n      (IERC20[] memory _rewardTokens, uint256[] memory _rewardAmounts) = poolRewarderInfo[pid][i].pendingTokens(pid, user, claRewardAmount);\\n      rewardTokens[i] = _rewardTokens[0];\\n      rewardAmounts[i] = _rewardAmounts[0];\\n    }\\n    return (rewardTokens, rewardAmounts);\\n  }\\n\\n  /// @notice Function to see pool's all rewarder info.\\n  /// @param pid Pool id.\\n  function getRewarderInfo(uint256 pid) public view returns (RewarderInfo[] memory) {\\n    uint256 length = poolRewarderInfo[pid].length;\\n    RewarderInfo[] memory rewarderInfo = new RewarderInfo[](length);\\n    for (uint8 i = 0; i < length; i++) {\\n      rewarderInfo[i] = RewarderInfo({\\n        rewardToken: poolRewarderInfo[pid][i].rewardToken(),\\n        tokenPerBlock: poolRewarderInfo[pid][i].tokenPerBlock(),\\n        allocPoint: poolRewarderInfo[pid][i].poolInfo(pid).allocPoint,\\n        totalAllocPoint: poolRewarderInfo[pid][i].totalAllocPoint()\\n      });\\n    }\\n\\n    return rewarderInfo;\\n  }\\n\\n  // STATE MODIFYING FUNCTION\\n\\n  /// @notice Function to claim all user's reward from pool rewarder.\\n  /// Only MasterChef can call this function.\\n  /// @param pid Pool id.\\n  /// @param user Address of user.\\n  /// @param recipient Address to recieve reward.\\n  /// @param claAmount Amount of cla reward.\\n  /// @param newLpAmount Amount of user lp amount.\\n  function onClaReward(\\n    uint256 pid, \\n    address user, \\n    address recipient, \\n    uint256 claAmount, \\n    uint256 newLpAmount\\n  ) external onlyMC {\\n    for(uint8 i = 0; i < poolRewarderInfo[pid].length; i++) {\\n      poolRewarderInfo[pid][i].onClaReward(pid, user, recipient, claAmount, newLpAmount);\\n    }\\n  }\\n\\n  // ADMIN FUNCTION\\n\\n  function addPoolRewarder(uint256 pid, IRewarderV2 newRewarder) public onlyOwner {\\n    require(address(newRewarder) != address(0), \\\"TotalRewarder:: rewarder can not be zero address\\\");\\n    IRewarderV2[] storage poolRewarders = poolRewarderInfo[pid];\\n    for (uint8 i = 0; i < poolRewarders.length; i++) {\\n      // duplicate check\\n      require(address(poolRewarders[i]) != address(newRewarder), \\\"TotalRewarder:: Already added\\\");\\n    }\\n    poolRewarders.push(newRewarder);\\n    emit LogAddPoolRewarder(pid, address(newRewarder));\\n  }\\n\\n  function removePoolRewarder(uint256 pid, IRewarderV2 rewarder) public onlyOwner {\\n    bool flag;\\n    IRewarderV2[] storage poolRewarders = poolRewarderInfo[pid];\\n    for (uint8 i = 0; i < poolRewarders.length; i++) {\\n        if (!flag && address(poolRewarders[i]) == address(rewarder)) {\\n            flag = true;\\n            emit LogRemovePoolRewarder(pid, address(rewarder));\\n        }\\n        if (flag) {\\n            if (i < poolRewarders.length -1) {\\n                poolRewarders[i] = poolRewarders[i+1];\\n            } else {\\n                delete poolRewarders[i];\\n                poolRewarders.length--;\\n            }\\n        }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x0261d4c86ad87c1d885e4cadd2174f2c77ca253a5bcda1dec519e818d0536bdf\"},\"contracts/codes/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.5.6;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n * \\n * Reference:\\n * \\n * - https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.1/contracts/access/Ownable.sol\\n */\\ncontract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = msg.sender;\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0xb066925af388797de1160b7ac2b460194b3575b7eec15ecd2643b398423f5b90\"},\"contracts/interfaces/IRewarderV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.5.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IRewarderV2 {\\n\\n    struct PoolInfo {\\n        uint128 accClaPerShare;\\n        uint64 lastRewardBlock;\\n        uint64 allocPoint;\\n    }\\n\\n    function rewardToken() external view returns (address);\\n\\n    function tokenPerBlock() external view returns (uint256);\\n\\n    function totalAllocPoint() external view returns (uint256);\\n\\n    function poolInfo(uint256) external view returns (PoolInfo memory);\\n    \\n    function onClaReward(\\n        uint256 pid,\\n        address user,\\n        address recipient,\\n        uint256 sushiAmount,\\n        uint256 newLpAmount\\n    ) external;\\n\\n    function pendingTokens(\\n        uint256 pid,\\n        address user,\\n        uint256 sushiAmount\\n    ) external view returns (IERC20[] memory, uint256[] memory);\\n\\n\\n}\\n\",\"keccak256\":\"0xb323a08dfc9a5eddeb68b644aeb61cb25612fea9ec2873db6b30d85aa660f470\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620017998339810180604052620000339190810190620000af565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b0392909216919091179055620000f7565b6000620000a88251620000d8565b9392505050565b600060208284031215620000c257600080fd5b6000620000d084846200009a565b949350505050565b6000620000e582620000eb565b92915050565b6001600160a01b031690565b61169280620001076000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b14610185578063f7851bd014610198578063fd1a76bb146101ab576100c9565b80638da5cb5b1461013c578063bd4dc8dd14610144578063d63b3c4914610164576100c9565b806356b7a575116100b257806356b7a5751461010c578063575a86b21461011f578063715018a614610134576100c9565b806301820e81146100ce578063134ecffb146100f7575b600080fd5b6100e16100dc36600461112b565b6101cb565b6040516100ee91906114c4565b60405180910390f35b61010a610105366004611039565b610200565b005b61010a61011a3660046110fb565b61030f565b6101276104b7565b6040516100ee919061147a565b61010a6104c6565b61012761054f565b610157610152366004610ffd565b61055f565b6040516100ee9190611522565b6101776101723660046110ae565b610571565b6040516100ee92919061148e565b61010a610193366004610f32565b61074d565b61010a6101a63660046110fb565b610810565b6101be6101b9366004610ffd565b610956565b6040516100ee91906114b3565b600160205281600052604060002081815481106101e457fe5b6000918252602090912001546001600160a01b03169150829050565b6002546001600160a01b0316331461023657604051600160e51b62461bcd02815260040161022d906114f2565b60405180910390fd5b60005b60008681526001602052604090205460ff82161015610307576000868152600160205260409020805460ff831690811061026f57fe5b6000918252602090912001546040517f134ecffb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063134ecffb906102c9908990899089908990899060040161154b565b600060405180830381600087803b1580156102e357600080fd5b505af11580156102f7573d6000803e3d6000fd5b5050600190920191506102399050565b505050505050565b3361031861054f565b6001600160a01b03161461034157604051600160e51b62461bcd02815260040161022d90611502565b6000828152600160205260408120815b815460ff821610156104b057821580156103965750836001600160a01b0316828260ff168154811061037f57fe5b6000918252602090912001546001600160a01b0316145b156103d957600192507f4c8f41c7677584c2fb6565c2310db28a4f541ef4b109411bc84169f711164b4185856040516103d0929190611530565b60405180910390a15b82156104a85781546000190160ff8216101561046157818160010160ff168154811061040157fe5b9060005260206000200160009054906101000a90046001600160a01b0316828260ff168154811061042e57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506104a8565b818160ff168154811061047057fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905581546104a6836000198301610d09565b505b600101610351565b5050505050565b6002546001600160a01b031681565b336104cf61054f565b6001600160a01b0316146104f857604051600160e51b62461bcd02815260040161022d90611502565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03165b90565b60009081526001602052604090205490565b6000838152600160209081526040918290205482518181528183028101909201909252606091829182908280156105b2578160200160208202803883390190505b5090506060826040519080825280602002602001820160405280156105e1578160200160208202803883390190505b50905060005b838160ff16101561073f5760008981526001602052604090208054606091829160ff851690811061061457fe5b6000918252602090912001546040517fd63b3c490000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063d63b3c499061066a908e908e908e90600401611597565b60006040518083038186803b15801561068257600080fd5b505afa158015610696573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106be9190810190610f76565b91509150816000815181106106cf57fe5b6020026020010151858460ff16815181106106e657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508060008151811061071357fe5b6020026020010151848460ff168151811061072a57fe5b602090810291909101015250506001016105e7565b509097909650945050505050565b3361075661054f565b6001600160a01b03161461077f57604051600160e51b62461bcd02815260040161022d90611502565b6001600160a01b0381166107a857604051600160e51b62461bcd02815260040161022d906114d2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3361081961054f565b6001600160a01b03161461084257604051600160e51b62461bcd02815260040161022d90611502565b6001600160a01b03811661086b57604051600160e51b62461bcd02815260040161022d90611512565b6000828152600160205260408120905b815460ff821610156108de57826001600160a01b0316828260ff16815481106108a057fe5b6000918252602090912001546001600160a01b031614156108d657604051600160e51b62461bcd02815260040161022d906114e2565b60010161087b565b50805460018101825560008281526020902001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790556040517fb00494e9edad3e43c063650bfb5a5c24aa2f50349ba6b6d5f6e2067ef8ef67d1906109499085908590611530565b60405180910390a1505050565b60008181526001602090815260409182902054825181815281830281019092019092526060919082908280156109a657816020015b610993610d32565b81526020019060019003908161098b5790505b50905060005b828160ff161015610d01576040518060800160405280600160008881526020019081526020016000208360ff16815481106109e357fe5b60009182526020918290200154604080517ff7c618c100000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169263f7c618c192600480840193829003018186803b158015610a4557600080fd5b505afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a7d9190810190610f58565b6001600160a01b03168152602001600160008881526020019081526020016000208360ff1681548110610aac57fe5b60009182526020918290200154604080517f4198709a00000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692634198709a92600480840193829003018186803b158015610b0e57600080fd5b505afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b46919081019061101b565b8152602001600160008881526020019081526020016000208360ff1681548110610b6c57fe5b6000918252602090912001546040517f1526fe270000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690631526fe2790610bbe908a90600401611522565b60606040518083038186803b158015610bd657600080fd5b505afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c0e9190810190610fdf565b6040015167ffffffffffffffff168152602001600160008881526020019081526020016000208360ff1681548110610c4257fe5b60009182526020918290200154604080517f17caf6f100000000000000000000000000000000000000000000000000000000815290516001600160a01b03909216926317caf6f192600480840193829003018186803b158015610ca457600080fd5b505afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cdc919081019061101b565b815250828260ff1681518110610cee57fe5b60209081029190910101526001016109ac565b509392505050565b815481835581811115610d2d57600083815260209020610d2d918101908301610d63565b505050565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b61055c91905b80821115610d7d5760008155600101610d69565b5090565b6000610d8d823561161a565b9392505050565b6000610d8d825161161a565b600082601f830112610db157600080fd5b8151610dc4610dbf826115e6565b6115bf565b91508181835260208401935060208101905083856020840282011115610de957600080fd5b60005b83811015610e155781610dff8882610e8f565b8452506020928301929190910190600101610dec565b5050505092915050565b600082601f830112610e3057600080fd5b8151610e3e610dbf826115e6565b91508181835260208401935060208101905083856020840282011115610e6357600080fd5b60005b83811015610e155781610e798882610f1a565b8452506020928301929190910190600101610e66565b6000610d8d825161162b565b6000610d8d823561162b565b600060608284031215610eb957600080fd5b610ec360606115bf565b90506000610ed18484610f02565b8252506020610ee284848301610f26565b6020830152506040610ef684828501610f26565b60408301525092915050565b6000610d8d8251611636565b6000610d8d823561055c565b6000610d8d825161055c565b6000610d8d825161164b565b600060208284031215610f4457600080fd5b6000610f508484610d81565b949350505050565b600060208284031215610f6a57600080fd5b6000610f508484610d94565b60008060408385031215610f8957600080fd5b825167ffffffffffffffff811115610fa057600080fd5b610fac85828601610da0565b925050602083015167ffffffffffffffff811115610fc957600080fd5b610fd585828601610e1f565b9150509250929050565b600060608284031215610ff157600080fd5b6000610f508484610ea7565b60006020828403121561100f57600080fd5b6000610f508484610f0e565b60006020828403121561102d57600080fd5b6000610f508484610f1a565b600080600080600060a0868803121561105157600080fd5b600061105d8888610f0e565b955050602061106e88828901610d81565b945050604061107f88828901610d81565b935050606061109088828901610f0e565b92505060806110a188828901610f0e565b9150509295509295909350565b6000806000606084860312156110c357600080fd5b60006110cf8686610f0e565b93505060206110e086828701610d81565b92505060406110f186828701610f0e565b9150509250925092565b6000806040838503121561110e57600080fd5b600061111a8585610f0e565b9250506020610fd585828601610e9b565b6000806040838503121561113e57600080fd5b600061114a8585610f0e565b9250506020610fd585828601610f0e565b60006111678383611289565b505060200190565b600061117b8383611421565b505060800190565b60006111678383611471565b6111988161161a565b82525050565b60006111a98261160d565b6111b38185611611565b93506111be83611607565b60005b828110156111e9576111d486835161115b565b95506111df82611607565b91506001016111c1565b5093949350505050565b60006111fe8261160d565b6112088185611611565b935061121383611607565b60005b828110156111e95761122986835161116f565b955061123482611607565b9150600101611216565b60006112498261160d565b6112538185611611565b935061125e83611607565b60005b828110156111e957611274868351611183565b955061127f82611607565b9150600101611261565b6111988161162b565b600061129f602683611611565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015260400192915050565b60006112fe601d83611611565b7f546f74616c52657761726465723a3a20416c7265616479206164646564000000815260200192915050565b6000611337602483611611565b7f546f74616c52657761726465723a3a204e6f742066726f6d206d61737465722081527f6368656600000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000611396602083611611565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b60006113cf603083611611565b7f546f74616c52657761726465723a3a2072657761726465722063616e206e6f7481527f206265207a65726f206164647265737300000000000000000000000000000000602082015260400192915050565b80516080830190611432848261118f565b5060208201516114456020850182611471565b5060408201516114586040850182611471565b50606082015161146b6060850182611471565b50505050565b6111988161055c565b60208101611488828461118f565b92915050565b6040808252810161149f818561119e565b90508181036020830152610f50818461123e565b60208082528101610d8d81846111f3565b602081016114888284611289565b6020808252810161148881611292565b60208082528101611488816112f1565b602080825281016114888161132a565b6020808252810161148881611389565b60208082528101611488816113c2565b602081016114888284611471565b6040810161153e8285611471565b610d8d602083018461118f565b60a081016115598288611471565b611566602083018761118f565b611573604083018661118f565b6115806060830185611471565b61158d6080830184611471565b9695505050505050565b606081016115a58286611471565b6115b2602083018561118f565b610f506040830184611471565b60405181810167ffffffffffffffff811182821017156115de57600080fd5b604052919050565b600067ffffffffffffffff8211156115fd57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006001600160a01b038216611488565b60006114888261161a565b6fffffffffffffffffffffffffffffffff1690565b67ffffffffffffffff169056fea265627a7a72305820aae308ead942513ad494fe5abf0ce664bda9c8dea459a9a5c9542ede4652b42c6c6578706572696d656e74616cf50037",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "getRewarderInfo(uint256)": {
        "params": {
          "pid": "Pool id."
        }
      },
      "onClaReward(uint256,address,address,uint256,uint256)": {
        "params": {
          "claAmount": "Amount of cla reward.",
          "newLpAmount": "Amount of user lp amount.",
          "pid": "Pool id.",
          "recipient": "Address to recieve reward.",
          "user": "Address of user."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingTokens(uint256,address,uint256)": {
        "params": {
          "claRewardAmount": "Amount of cla reward.",
          "pid": "Pool id.",
          "user": "Address of user."
        }
      },
      "poolRewarderLength(uint256)": {
        "params": {
          "pid": "Pool id."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getRewarderInfo(uint256)": {
        "notice": "Function to see pool's all rewarder info."
      },
      "onClaReward(uint256,address,address,uint256,uint256)": {
        "notice": "Function to claim all user's reward from pool rewarder. Only MasterChef can call this function."
      },
      "pendingTokens(uint256,address,uint256)": {
        "notice": "Function to see user's pending amounts for pools reward."
      },
      "poolRewarderLength(uint256)": {
        "notice": "Returns the number of rewarder in pool."
      }
    }
  }
}